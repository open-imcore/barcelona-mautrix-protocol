// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: ipc/v1/v1.proto

package mautrix_nosip_protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TapbackType int32

const (
	TapbackType_TapbackNothing        TapbackType = 0
	TapbackType_TapbackLove           TapbackType = 2000
	TapbackType_TapbackLike           TapbackType = 2001
	TapbackType_TapbackDislike        TapbackType = 2002
	TapbackType_TapbackLaugh          TapbackType = 2003
	TapbackType_TapbackEmphasis       TapbackType = 2004
	TapbackType_TapbackQuestion       TapbackType = 2005
	TapbackType_TapbackRemoveLove     TapbackType = 3000
	TapbackType_TapbackRemoveLike     TapbackType = 3001
	TapbackType_TapbackRemoveDislike  TapbackType = 3002
	TapbackType_TapbackRemoveLaugh    TapbackType = 3003
	TapbackType_TapbackRemoveEmphasis TapbackType = 3004
	TapbackType_TapbackRemoveQuestion TapbackType = 3005
)

// Enum value maps for TapbackType.
var (
	TapbackType_name = map[int32]string{
		0:    "TapbackNothing",
		2000: "TapbackLove",
		2001: "TapbackLike",
		2002: "TapbackDislike",
		2003: "TapbackLaugh",
		2004: "TapbackEmphasis",
		2005: "TapbackQuestion",
		3000: "TapbackRemoveLove",
		3001: "TapbackRemoveLike",
		3002: "TapbackRemoveDislike",
		3003: "TapbackRemoveLaugh",
		3004: "TapbackRemoveEmphasis",
		3005: "TapbackRemoveQuestion",
	}
	TapbackType_value = map[string]int32{
		"TapbackNothing":        0,
		"TapbackLove":           2000,
		"TapbackLike":           2001,
		"TapbackDislike":        2002,
		"TapbackLaugh":          2003,
		"TapbackEmphasis":       2004,
		"TapbackQuestion":       2005,
		"TapbackRemoveLove":     3000,
		"TapbackRemoveLike":     3001,
		"TapbackRemoveDislike":  3002,
		"TapbackRemoveLaugh":    3003,
		"TapbackRemoveEmphasis": 3004,
		"TapbackRemoveQuestion": 3005,
	}
)

func (x TapbackType) Enum() *TapbackType {
	p := new(TapbackType)
	*p = x
	return p
}

func (x TapbackType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TapbackType) Descriptor() protoreflect.EnumDescriptor {
	return file_ipc_v1_v1_proto_enumTypes[0].Descriptor()
}

func (TapbackType) Type() protoreflect.EnumType {
	return &file_ipc_v1_v1_proto_enumTypes[0]
}

func (x TapbackType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TapbackType.Descriptor instead.
func (TapbackType) EnumDescriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{0}
}

type ItemType int32

const (
	ItemType_ItemTypeMessage ItemType = 0
	ItemType_ItemTypeMember  ItemType = 1
	ItemType_ItemTypeName    ItemType = 2
	ItemType_ItemTypeAvatar  ItemType = 4
	ItemType_ItemTypeError   ItemType = 5
)

// Enum value maps for ItemType.
var (
	ItemType_name = map[int32]string{
		0: "ItemTypeMessage",
		1: "ItemTypeMember",
		2: "ItemTypeName",
		4: "ItemTypeAvatar",
		5: "ItemTypeError",
	}
	ItemType_value = map[string]int32{
		"ItemTypeMessage": 0,
		"ItemTypeMember":  1,
		"ItemTypeName":    2,
		"ItemTypeAvatar":  4,
		"ItemTypeError":   5,
	}
)

func (x ItemType) Enum() *ItemType {
	p := new(ItemType)
	*p = x
	return p
}

func (x ItemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemType) Descriptor() protoreflect.EnumDescriptor {
	return file_ipc_v1_v1_proto_enumTypes[1].Descriptor()
}

func (ItemType) Type() protoreflect.EnumType {
	return &file_ipc_v1_v1_proto_enumTypes[1]
}

func (x ItemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemType.Descriptor instead.
func (ItemType) EnumDescriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{1}
}

type GroupActionType int32

const (
	GroupActionType_GroupActionAdd    GroupActionType = 0
	GroupActionType_GroupActionRemove GroupActionType = 1
)

// Enum value maps for GroupActionType.
var (
	GroupActionType_name = map[int32]string{
		0: "GroupActionAdd",
		1: "GroupActionRemove",
	}
	GroupActionType_value = map[string]int32{
		"GroupActionAdd":    0,
		"GroupActionRemove": 1,
	}
)

func (x GroupActionType) Enum() *GroupActionType {
	p := new(GroupActionType)
	*p = x
	return p
}

func (x GroupActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_ipc_v1_v1_proto_enumTypes[2].Descriptor()
}

func (GroupActionType) Type() protoreflect.EnumType {
	return &file_ipc_v1_v1_proto_enumTypes[2]
}

func (x GroupActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupActionType.Descriptor instead.
func (GroupActionType) EnumDescriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{2}
}

type GUID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service string `protobuf:"bytes,1,opt,name=Service,proto3" json:"Service,omitempty"`
	IsGroup bool   `protobuf:"varint,2,opt,name=IsGroup,proto3" json:"IsGroup,omitempty"`
	LocalID string `protobuf:"bytes,3,opt,name=LocalID,proto3" json:"LocalID,omitempty"`
}

func (x *GUID) Reset() {
	*x = GUID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GUID) ProtoMessage() {}

func (x *GUID) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GUID.ProtoReflect.Descriptor instead.
func (*GUID) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{0}
}

func (x *GUID) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *GUID) GetIsGroup() bool {
	if x != nil {
		return x.IsGroup
	}
	return false
}

func (x *GUID) GetLocalID() string {
	if x != nil {
		return x.LocalID
	}
	return ""
}

type MessageTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	Part int64  `protobuf:"varint,2,opt,name=Part,proto3" json:"Part,omitempty"`
}

func (x *MessageTarget) Reset() {
	*x = MessageTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageTarget) ProtoMessage() {}

func (x *MessageTarget) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageTarget.ProtoReflect.Descriptor instead.
func (*MessageTarget) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{1}
}

func (x *MessageTarget) GetGUID() string {
	if x != nil {
		return x.GUID
	}
	return ""
}

func (x *MessageTarget) GetPart() int64 {
	if x != nil {
		return x.Part
	}
	return 0
}

type Tapback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target string      `protobuf:"bytes,1,opt,name=Target,proto3" json:"Target,omitempty"`
	Type   TapbackType `protobuf:"varint,2,opt,name=Type,proto3,enum=TapbackType" json:"Type,omitempty"`
}

func (x *Tapback) Reset() {
	*x = Tapback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tapback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tapback) ProtoMessage() {}

func (x *Tapback) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tapback.ProtoReflect.Descriptor instead.
func (*Tapback) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{2}
}

func (x *Tapback) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Tapback) GetType() TapbackType {
	if x != nil {
		return x.Type
	}
	return TapbackType_TapbackNothing
}

type Attachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GUID       *string `protobuf:"bytes,1,opt,name=GUID,proto3,oneof" json:"GUID,omitempty"`
	PathOnDisk string  `protobuf:"bytes,2,opt,name=PathOnDisk,proto3" json:"PathOnDisk,omitempty"`
	FileName   string  `protobuf:"bytes,3,opt,name=FileName,proto3" json:"FileName,omitempty"`
	MimeType   *string `protobuf:"bytes,4,opt,name=MimeType,proto3,oneof" json:"MimeType,omitempty"`
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{3}
}

func (x *Attachment) GetGUID() string {
	if x != nil && x.GUID != nil {
		return *x.GUID
	}
	return ""
}

func (x *Attachment) GetPathOnDisk() string {
	if x != nil {
		return x.PathOnDisk
	}
	return ""
}

func (x *Attachment) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *Attachment) GetMimeType() string {
	if x != nil && x.MimeType != nil {
		return *x.MimeType
	}
	return ""
}

type RichLinkAssetSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Source:
	//	*RichLinkAssetSource_URL
	//	*RichLinkAssetSource_Data
	Source isRichLinkAssetSource_Source `protobuf_oneof:"Source"`
}

func (x *RichLinkAssetSource) Reset() {
	*x = RichLinkAssetSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RichLinkAssetSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RichLinkAssetSource) ProtoMessage() {}

func (x *RichLinkAssetSource) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RichLinkAssetSource.ProtoReflect.Descriptor instead.
func (*RichLinkAssetSource) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{4}
}

func (m *RichLinkAssetSource) GetSource() isRichLinkAssetSource_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (x *RichLinkAssetSource) GetURL() string {
	if x, ok := x.GetSource().(*RichLinkAssetSource_URL); ok {
		return x.URL
	}
	return ""
}

func (x *RichLinkAssetSource) GetData() []byte {
	if x, ok := x.GetSource().(*RichLinkAssetSource_Data); ok {
		return x.Data
	}
	return nil
}

type isRichLinkAssetSource_Source interface {
	isRichLinkAssetSource_Source()
}

type RichLinkAssetSource_URL struct {
	URL string `protobuf:"bytes,1,opt,name=URL,proto3,oneof"`
}

type RichLinkAssetSource_Data struct {
	Data []byte `protobuf:"bytes,2,opt,name=Data,proto3,oneof"`
}

func (*RichLinkAssetSource_URL) isRichLinkAssetSource_Source() {}

func (*RichLinkAssetSource_Data) isRichLinkAssetSource_Source() {}

type RichLinkAssetSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  int64 `protobuf:"varint,1,opt,name=Width,proto3" json:"Width,omitempty"`
	Height int64 `protobuf:"varint,2,opt,name=Height,proto3" json:"Height,omitempty"`
}

func (x *RichLinkAssetSize) Reset() {
	*x = RichLinkAssetSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RichLinkAssetSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RichLinkAssetSize) ProtoMessage() {}

func (x *RichLinkAssetSize) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RichLinkAssetSize.ProtoReflect.Descriptor instead.
func (*RichLinkAssetSize) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{5}
}

func (x *RichLinkAssetSize) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *RichLinkAssetSize) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type RichLinkAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MimeType          *string              `protobuf:"bytes,1,opt,name=MimeType,proto3,oneof" json:"MimeType,omitempty"`
	AccessibilityText *string              `protobuf:"bytes,2,opt,name=AccessibilityText,proto3,oneof" json:"AccessibilityText,omitempty"`
	Source            *RichLinkAssetSource `protobuf:"bytes,3,opt,name=Source,proto3,oneof" json:"Source,omitempty"`
	OriginalURL       *string              `protobuf:"bytes,4,opt,name=OriginalURL,proto3,oneof" json:"OriginalURL,omitempty"`
	Size              *RichLinkAssetSize   `protobuf:"bytes,5,opt,name=Size,proto3,oneof" json:"Size,omitempty"`
}

func (x *RichLinkAsset) Reset() {
	*x = RichLinkAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RichLinkAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RichLinkAsset) ProtoMessage() {}

func (x *RichLinkAsset) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RichLinkAsset.ProtoReflect.Descriptor instead.
func (*RichLinkAsset) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{6}
}

func (x *RichLinkAsset) GetMimeType() string {
	if x != nil && x.MimeType != nil {
		return *x.MimeType
	}
	return ""
}

func (x *RichLinkAsset) GetAccessibilityText() string {
	if x != nil && x.AccessibilityText != nil {
		return *x.AccessibilityText
	}
	return ""
}

func (x *RichLinkAsset) GetSource() *RichLinkAssetSource {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *RichLinkAsset) GetOriginalURL() string {
	if x != nil && x.OriginalURL != nil {
		return *x.OriginalURL
	}
	return ""
}

func (x *RichLinkAsset) GetSize() *RichLinkAssetSize {
	if x != nil {
		return x.Size
	}
	return nil
}

type RichLinkVideoAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasAudio     bool           `protobuf:"varint,1,opt,name=HasAudio,proto3" json:"HasAudio,omitempty"`
	YouTubeURL   *string        `protobuf:"bytes,2,opt,name=YouTubeURL,proto3,oneof" json:"YouTubeURL,omitempty"`
	StreamingURL *string        `protobuf:"bytes,3,opt,name=StreamingURL,proto3,oneof" json:"StreamingURL,omitempty"`
	Asset        *RichLinkAsset `protobuf:"bytes,4,opt,name=Asset,proto3" json:"Asset,omitempty"`
}

func (x *RichLinkVideoAsset) Reset() {
	*x = RichLinkVideoAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RichLinkVideoAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RichLinkVideoAsset) ProtoMessage() {}

func (x *RichLinkVideoAsset) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RichLinkVideoAsset.ProtoReflect.Descriptor instead.
func (*RichLinkVideoAsset) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{7}
}

func (x *RichLinkVideoAsset) GetHasAudio() bool {
	if x != nil {
		return x.HasAudio
	}
	return false
}

func (x *RichLinkVideoAsset) GetYouTubeURL() string {
	if x != nil && x.YouTubeURL != nil {
		return *x.YouTubeURL
	}
	return ""
}

func (x *RichLinkVideoAsset) GetStreamingURL() string {
	if x != nil && x.StreamingURL != nil {
		return *x.StreamingURL
	}
	return ""
}

func (x *RichLinkVideoAsset) GetAsset() *RichLinkAsset {
	if x != nil {
		return x.Asset
	}
	return nil
}

type RichLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalURL            *string             `protobuf:"bytes,1,opt,name=OriginalURL,proto3,oneof" json:"OriginalURL,omitempty"`
	URL                    *string             `protobuf:"bytes,2,opt,name=URL,proto3,oneof" json:"URL,omitempty"`
	Title                  *string             `protobuf:"bytes,3,opt,name=Title,proto3,oneof" json:"Title,omitempty"`
	Summary                *string             `protobuf:"bytes,4,opt,name=Summary,proto3,oneof" json:"Summary,omitempty"`
	SelectedText           *string             `protobuf:"bytes,5,opt,name=SelectedText,proto3,oneof" json:"SelectedText,omitempty"`
	SiteName               *string             `protobuf:"bytes,6,opt,name=SiteName,proto3,oneof" json:"SiteName,omitempty"`
	RelatedURL             *string             `protobuf:"bytes,7,opt,name=RelatedURL,proto3,oneof" json:"RelatedURL,omitempty"`
	Creator                *string             `protobuf:"bytes,8,opt,name=Creator,proto3,oneof" json:"Creator,omitempty"`
	CreatorFacebookProfile *string             `protobuf:"bytes,9,opt,name=CreatorFacebookProfile,proto3,oneof" json:"CreatorFacebookProfile,omitempty"`
	CreatorTwitterUsername *string             `protobuf:"bytes,10,opt,name=CreatorTwitterUsername,proto3,oneof" json:"CreatorTwitterUsername,omitempty"`
	ItemType               *string             `protobuf:"bytes,11,opt,name=ItemType,proto3,oneof" json:"ItemType,omitempty"`
	Icon                   *RichLinkAsset      `protobuf:"bytes,12,opt,name=Icon,proto3,oneof" json:"Icon,omitempty"`
	Image                  *RichLinkAsset      `protobuf:"bytes,13,opt,name=Image,proto3,oneof" json:"Image,omitempty"`
	Video                  *RichLinkVideoAsset `protobuf:"bytes,14,opt,name=Video,proto3,oneof" json:"Video,omitempty"`
	Audio                  *RichLinkAsset      `protobuf:"bytes,19,opt,name=Audio,proto3,oneof" json:"Audio,omitempty"`
	Images                 []*RichLinkAsset    `protobuf:"bytes,15,rep,name=Images,proto3" json:"Images,omitempty"`
	Videos                 []*RichLinkAsset    `protobuf:"bytes,16,rep,name=Videos,proto3" json:"Videos,omitempty"`
	StreamingVideos        []*RichLinkAsset    `protobuf:"bytes,17,rep,name=StreamingVideos,proto3" json:"StreamingVideos,omitempty"`
	Audios                 []*RichLinkAsset    `protobuf:"bytes,18,rep,name=Audios,proto3" json:"Audios,omitempty"`
}

func (x *RichLink) Reset() {
	*x = RichLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RichLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RichLink) ProtoMessage() {}

func (x *RichLink) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RichLink.ProtoReflect.Descriptor instead.
func (*RichLink) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{8}
}

func (x *RichLink) GetOriginalURL() string {
	if x != nil && x.OriginalURL != nil {
		return *x.OriginalURL
	}
	return ""
}

func (x *RichLink) GetURL() string {
	if x != nil && x.URL != nil {
		return *x.URL
	}
	return ""
}

func (x *RichLink) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *RichLink) GetSummary() string {
	if x != nil && x.Summary != nil {
		return *x.Summary
	}
	return ""
}

func (x *RichLink) GetSelectedText() string {
	if x != nil && x.SelectedText != nil {
		return *x.SelectedText
	}
	return ""
}

func (x *RichLink) GetSiteName() string {
	if x != nil && x.SiteName != nil {
		return *x.SiteName
	}
	return ""
}

func (x *RichLink) GetRelatedURL() string {
	if x != nil && x.RelatedURL != nil {
		return *x.RelatedURL
	}
	return ""
}

func (x *RichLink) GetCreator() string {
	if x != nil && x.Creator != nil {
		return *x.Creator
	}
	return ""
}

func (x *RichLink) GetCreatorFacebookProfile() string {
	if x != nil && x.CreatorFacebookProfile != nil {
		return *x.CreatorFacebookProfile
	}
	return ""
}

func (x *RichLink) GetCreatorTwitterUsername() string {
	if x != nil && x.CreatorTwitterUsername != nil {
		return *x.CreatorTwitterUsername
	}
	return ""
}

func (x *RichLink) GetItemType() string {
	if x != nil && x.ItemType != nil {
		return *x.ItemType
	}
	return ""
}

func (x *RichLink) GetIcon() *RichLinkAsset {
	if x != nil {
		return x.Icon
	}
	return nil
}

func (x *RichLink) GetImage() *RichLinkAsset {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *RichLink) GetVideo() *RichLinkVideoAsset {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *RichLink) GetAudio() *RichLinkAsset {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *RichLink) GetImages() []*RichLinkAsset {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *RichLink) GetVideos() []*RichLinkAsset {
	if x != nil {
		return x.Videos
	}
	return nil
}

func (x *RichLink) GetStreamingVideos() []*RichLinkAsset {
	if x != nil {
		return x.StreamingVideos
	}
	return nil
}

func (x *RichLink) GetAudios() []*RichLinkAsset {
	if x != nil {
		return x.Audios
	}
	return nil
}

type Array struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*MetadataValue `protobuf:"bytes,1,rep,name=Values,proto3" json:"Values,omitempty"`
}

func (x *Array) Reset() {
	*x = Array{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Array) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Array) ProtoMessage() {}

func (x *Array) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Array.ProtoReflect.Descriptor instead.
func (*Array) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{9}
}

func (x *Array) GetValues() []*MetadataValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type Mapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mapping map[string]*MetadataValue `protobuf:"bytes,1,rep,name=mapping,proto3" json:"mapping,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Mapping) Reset() {
	*x = Mapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mapping) ProtoMessage() {}

func (x *Mapping) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mapping.ProtoReflect.Descriptor instead.
func (*Mapping) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{10}
}

func (x *Mapping) GetMapping() map[string]*MetadataValue {
	if x != nil {
		return x.Mapping
	}
	return nil
}

type MetadataValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*MetadataValue_String_
	//	*MetadataValue_Double
	//	*MetadataValue_Float
	//	*MetadataValue_Int32
	//	*MetadataValue_Int64
	//	*MetadataValue_UInt32
	//	*MetadataValue_UInt64
	//	*MetadataValue_SInt32
	//	*MetadataValue_SInt64
	//	*MetadataValue_Fixed32
	//	*MetadataValue_Fixed64
	//	*MetadataValue_SFIxed32
	//	*MetadataValue_SFixed64
	//	*MetadataValue_Bool
	//	*MetadataValue_Bytes
	//	*MetadataValue_Array
	//	*MetadataValue_Mapping
	Value isMetadataValue_Value `protobuf_oneof:"Value"`
}

func (x *MetadataValue) Reset() {
	*x = MetadataValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataValue) ProtoMessage() {}

func (x *MetadataValue) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataValue.ProtoReflect.Descriptor instead.
func (*MetadataValue) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{11}
}

func (m *MetadataValue) GetValue() isMetadataValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *MetadataValue) GetString_() string {
	if x, ok := x.GetValue().(*MetadataValue_String_); ok {
		return x.String_
	}
	return ""
}

func (x *MetadataValue) GetDouble() float64 {
	if x, ok := x.GetValue().(*MetadataValue_Double); ok {
		return x.Double
	}
	return 0
}

func (x *MetadataValue) GetFloat() float32 {
	if x, ok := x.GetValue().(*MetadataValue_Float); ok {
		return x.Float
	}
	return 0
}

func (x *MetadataValue) GetInt32() int32 {
	if x, ok := x.GetValue().(*MetadataValue_Int32); ok {
		return x.Int32
	}
	return 0
}

func (x *MetadataValue) GetInt64() int64 {
	if x, ok := x.GetValue().(*MetadataValue_Int64); ok {
		return x.Int64
	}
	return 0
}

func (x *MetadataValue) GetUInt32() uint32 {
	if x, ok := x.GetValue().(*MetadataValue_UInt32); ok {
		return x.UInt32
	}
	return 0
}

func (x *MetadataValue) GetUInt64() uint64 {
	if x, ok := x.GetValue().(*MetadataValue_UInt64); ok {
		return x.UInt64
	}
	return 0
}

func (x *MetadataValue) GetSInt32() int32 {
	if x, ok := x.GetValue().(*MetadataValue_SInt32); ok {
		return x.SInt32
	}
	return 0
}

func (x *MetadataValue) GetSInt64() int64 {
	if x, ok := x.GetValue().(*MetadataValue_SInt64); ok {
		return x.SInt64
	}
	return 0
}

func (x *MetadataValue) GetFixed32() uint32 {
	if x, ok := x.GetValue().(*MetadataValue_Fixed32); ok {
		return x.Fixed32
	}
	return 0
}

func (x *MetadataValue) GetFixed64() uint64 {
	if x, ok := x.GetValue().(*MetadataValue_Fixed64); ok {
		return x.Fixed64
	}
	return 0
}

func (x *MetadataValue) GetSFIxed32() int32 {
	if x, ok := x.GetValue().(*MetadataValue_SFIxed32); ok {
		return x.SFIxed32
	}
	return 0
}

func (x *MetadataValue) GetSFixed64() int64 {
	if x, ok := x.GetValue().(*MetadataValue_SFixed64); ok {
		return x.SFixed64
	}
	return 0
}

func (x *MetadataValue) GetBool() bool {
	if x, ok := x.GetValue().(*MetadataValue_Bool); ok {
		return x.Bool
	}
	return false
}

func (x *MetadataValue) GetBytes() []byte {
	if x, ok := x.GetValue().(*MetadataValue_Bytes); ok {
		return x.Bytes
	}
	return nil
}

func (x *MetadataValue) GetArray() *Array {
	if x, ok := x.GetValue().(*MetadataValue_Array); ok {
		return x.Array
	}
	return nil
}

func (x *MetadataValue) GetMapping() *Mapping {
	if x, ok := x.GetValue().(*MetadataValue_Mapping); ok {
		return x.Mapping
	}
	return nil
}

type isMetadataValue_Value interface {
	isMetadataValue_Value()
}

type MetadataValue_String_ struct {
	String_ string `protobuf:"bytes,1,opt,name=String,proto3,oneof"`
}

type MetadataValue_Double struct {
	Double float64 `protobuf:"fixed64,2,opt,name=Double,proto3,oneof"`
}

type MetadataValue_Float struct {
	Float float32 `protobuf:"fixed32,3,opt,name=Float,proto3,oneof"`
}

type MetadataValue_Int32 struct {
	Int32 int32 `protobuf:"varint,4,opt,name=Int32,proto3,oneof"`
}

type MetadataValue_Int64 struct {
	Int64 int64 `protobuf:"varint,5,opt,name=Int64,proto3,oneof"`
}

type MetadataValue_UInt32 struct {
	UInt32 uint32 `protobuf:"varint,6,opt,name=UInt32,proto3,oneof"`
}

type MetadataValue_UInt64 struct {
	UInt64 uint64 `protobuf:"varint,7,opt,name=UInt64,proto3,oneof"`
}

type MetadataValue_SInt32 struct {
	SInt32 int32 `protobuf:"zigzag32,8,opt,name=SInt32,proto3,oneof"`
}

type MetadataValue_SInt64 struct {
	SInt64 int64 `protobuf:"zigzag64,9,opt,name=SInt64,proto3,oneof"`
}

type MetadataValue_Fixed32 struct {
	Fixed32 uint32 `protobuf:"fixed32,10,opt,name=Fixed32,proto3,oneof"`
}

type MetadataValue_Fixed64 struct {
	Fixed64 uint64 `protobuf:"fixed64,11,opt,name=Fixed64,proto3,oneof"`
}

type MetadataValue_SFIxed32 struct {
	SFIxed32 int32 `protobuf:"fixed32,12,opt,name=SFIxed32,proto3,oneof"`
}

type MetadataValue_SFixed64 struct {
	SFixed64 int64 `protobuf:"fixed64,13,opt,name=SFixed64,proto3,oneof"`
}

type MetadataValue_Bool struct {
	Bool bool `protobuf:"varint,14,opt,name=Bool,proto3,oneof"`
}

type MetadataValue_Bytes struct {
	Bytes []byte `protobuf:"bytes,15,opt,name=Bytes,proto3,oneof"`
}

type MetadataValue_Array struct {
	Array *Array `protobuf:"bytes,16,opt,name=Array,proto3,oneof"`
}

type MetadataValue_Mapping struct {
	Mapping *Mapping `protobuf:"bytes,17,opt,name=Mapping,proto3,oneof"`
}

func (*MetadataValue_String_) isMetadataValue_Value() {}

func (*MetadataValue_Double) isMetadataValue_Value() {}

func (*MetadataValue_Float) isMetadataValue_Value() {}

func (*MetadataValue_Int32) isMetadataValue_Value() {}

func (*MetadataValue_Int64) isMetadataValue_Value() {}

func (*MetadataValue_UInt32) isMetadataValue_Value() {}

func (*MetadataValue_UInt64) isMetadataValue_Value() {}

func (*MetadataValue_SInt32) isMetadataValue_Value() {}

func (*MetadataValue_SInt64) isMetadataValue_Value() {}

func (*MetadataValue_Fixed32) isMetadataValue_Value() {}

func (*MetadataValue_Fixed64) isMetadataValue_Value() {}

func (*MetadataValue_SFIxed32) isMetadataValue_Value() {}

func (*MetadataValue_SFixed64) isMetadataValue_Value() {}

func (*MetadataValue_Bool) isMetadataValue_Value() {}

func (*MetadataValue_Bytes) isMetadataValue_Value() {}

func (*MetadataValue_Array) isMetadataValue_Value() {}

func (*MetadataValue_Mapping) isMetadataValue_Value() {}

type Correlations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender *string `protobuf:"bytes,1,opt,name=Sender,proto3,oneof" json:"Sender,omitempty"`
	Chat   *string `protobuf:"bytes,2,opt,name=Chat,proto3,oneof" json:"Chat,omitempty"`
}

func (x *Correlations) Reset() {
	*x = Correlations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Correlations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Correlations) ProtoMessage() {}

func (x *Correlations) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Correlations.ProtoReflect.Descriptor instead.
func (*Correlations) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{12}
}

func (x *Correlations) GetSender() string {
	if x != nil && x.Sender != nil {
		return *x.Sender
	}
	return ""
}

func (x *Correlations) GetChat() string {
	if x != nil && x.Chat != nil {
		return *x.Chat
	}
	return ""
}

type TextItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text    string `protobuf:"bytes,1,opt,name=Text,proto3" json:"Text,omitempty"`
	Subject string `protobuf:"bytes,2,opt,name=Subject,proto3" json:"Subject,omitempty"`
}

func (x *TextItem) Reset() {
	*x = TextItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextItem) ProtoMessage() {}

func (x *TextItem) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextItem.ProtoReflect.Descriptor instead.
func (*TextItem) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{13}
}

func (x *TextItem) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TextItem) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

type AttachmentItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *Attachment `protobuf:"bytes,1,opt,name=Attachment,proto3" json:"Attachment,omitempty"`
}

func (x *AttachmentItem) Reset() {
	*x = AttachmentItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentItem) ProtoMessage() {}

func (x *AttachmentItem) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentItem.ProtoReflect.Descriptor instead.
func (*AttachmentItem) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{14}
}

func (x *AttachmentItem) GetAttachment() *Attachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type TypingItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Typing bool `protobuf:"varint,1,opt,name=Typing,proto3" json:"Typing,omitempty"`
}

func (x *TypingItem) Reset() {
	*x = TypingItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypingItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypingItem) ProtoMessage() {}

func (x *TypingItem) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypingItem.ProtoReflect.Descriptor instead.
func (*TypingItem) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{15}
}

func (x *TypingItem) GetTyping() bool {
	if x != nil {
		return x.Typing
	}
	return false
}

type PluginItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RichLink     *RichLink     `protobuf:"bytes,1,opt,name=RichLink,proto3" json:"RichLink,omitempty"`
	Attachments  []*Attachment `protobuf:"bytes,2,rep,name=Attachments,proto3" json:"Attachments,omitempty"`
	FallbackText *string       `protobuf:"bytes,3,opt,name=FallbackText,proto3,oneof" json:"FallbackText,omitempty"`
}

func (x *PluginItem) Reset() {
	*x = PluginItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginItem) ProtoMessage() {}

func (x *PluginItem) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginItem.ProtoReflect.Descriptor instead.
func (*PluginItem) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{16}
}

func (x *PluginItem) GetRichLink() *RichLink {
	if x != nil {
		return x.RichLink
	}
	return nil
}

func (x *PluginItem) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *PluginItem) GetFallbackText() string {
	if x != nil && x.FallbackText != nil {
		return *x.FallbackText
	}
	return ""
}

type GroupNameChangeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title *string `protobuf:"bytes,1,opt,name=Title,proto3,oneof" json:"Title,omitempty"`
}

func (x *GroupNameChangeItem) Reset() {
	*x = GroupNameChangeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupNameChangeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupNameChangeItem) ProtoMessage() {}

func (x *GroupNameChangeItem) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupNameChangeItem.ProtoReflect.Descriptor instead.
func (*GroupNameChangeItem) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{17}
}

func (x *GroupNameChangeItem) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

type GroupAvatarChangeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action    GroupActionType `protobuf:"varint,1,opt,name=Action,proto3,enum=GroupActionType" json:"Action,omitempty"`
	NewAvatar *Attachment     `protobuf:"bytes,2,opt,name=NewAvatar,proto3,oneof" json:"NewAvatar,omitempty"`
}

func (x *GroupAvatarChangeItem) Reset() {
	*x = GroupAvatarChangeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupAvatarChangeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupAvatarChangeItem) ProtoMessage() {}

func (x *GroupAvatarChangeItem) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupAvatarChangeItem.ProtoReflect.Descriptor instead.
func (*GroupAvatarChangeItem) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{18}
}

func (x *GroupAvatarChangeItem) GetAction() GroupActionType {
	if x != nil {
		return x.Action
	}
	return GroupActionType_GroupActionAdd
}

func (x *GroupAvatarChangeItem) GetNewAvatar() *Attachment {
	if x != nil {
		return x.NewAvatar
	}
	return nil
}

type GroupParticipantChangeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action    GroupActionType `protobuf:"varint,1,opt,name=Action,proto3,enum=GroupActionType" json:"Action,omitempty"`
	Target    *string         `protobuf:"bytes,2,opt,name=Target,proto3,oneof" json:"Target,omitempty"`
	Initiator *string         `protobuf:"bytes,3,opt,name=Initiator,proto3,oneof" json:"Initiator,omitempty"`
}

func (x *GroupParticipantChangeItem) Reset() {
	*x = GroupParticipantChangeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupParticipantChangeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupParticipantChangeItem) ProtoMessage() {}

func (x *GroupParticipantChangeItem) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupParticipantChangeItem.ProtoReflect.Descriptor instead.
func (*GroupParticipantChangeItem) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{19}
}

func (x *GroupParticipantChangeItem) GetAction() GroupActionType {
	if x != nil {
		return x.Action
	}
	return GroupActionType_GroupActionAdd
}

func (x *GroupParticipantChangeItem) GetTarget() string {
	if x != nil && x.Target != nil {
		return *x.Target
	}
	return ""
}

func (x *GroupParticipantChangeItem) GetInitiator() string {
	if x != nil && x.Initiator != nil {
		return *x.Initiator
	}
	return ""
}

type TapbackItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tapback *Tapback `protobuf:"bytes,1,opt,name=Tapback,proto3" json:"Tapback,omitempty"`
}

func (x *TapbackItem) Reset() {
	*x = TapbackItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TapbackItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TapbackItem) ProtoMessage() {}

func (x *TapbackItem) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TapbackItem.ProtoReflect.Descriptor instead.
func (*TapbackItem) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{20}
}

func (x *TapbackItem) GetTapback() *Tapback {
	if x != nil {
		return x.Tapback
	}
	return nil
}

type PhantomItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeString       string `protobuf:"bytes,1,opt,name=TypeString,proto3" json:"TypeString,omitempty"`
	DebugDescription string `protobuf:"bytes,2,opt,name=DebugDescription,proto3" json:"DebugDescription,omitempty"`
}

func (x *PhantomItem) Reset() {
	*x = PhantomItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhantomItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhantomItem) ProtoMessage() {}

func (x *PhantomItem) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhantomItem.ProtoReflect.Descriptor instead.
func (*PhantomItem) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{21}
}

func (x *PhantomItem) GetTypeString() string {
	if x != nil {
		return x.TypeString
	}
	return ""
}

func (x *PhantomItem) GetDebugDescription() string {
	if x != nil {
		return x.DebugDescription
	}
	return ""
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// Types that are assignable to X:
	//	*Item_Text
	//	*Item_Attachment
	//	*Item_Typing
	//	*Item_Plugin
	//	*Item_GroupNameChange
	//	*Item_GroupAvatarChange
	//	*Item_GroupParticipantChange
	//	*Item_Tapback
	//	*Item_Phantom
	X isItem_X `protobuf_oneof:"_"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{22}
}

func (x *Item) GetGUID() string {
	if x != nil {
		return x.GUID
	}
	return ""
}

func (m *Item) GetX() isItem_X {
	if m != nil {
		return m.X
	}
	return nil
}

func (x *Item) GetText() *TextItem {
	if x, ok := x.GetX().(*Item_Text); ok {
		return x.Text
	}
	return nil
}

func (x *Item) GetAttachment() *AttachmentItem {
	if x, ok := x.GetX().(*Item_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (x *Item) GetTyping() *TypingItem {
	if x, ok := x.GetX().(*Item_Typing); ok {
		return x.Typing
	}
	return nil
}

func (x *Item) GetPlugin() *PluginItem {
	if x, ok := x.GetX().(*Item_Plugin); ok {
		return x.Plugin
	}
	return nil
}

func (x *Item) GetGroupNameChange() *GroupNameChangeItem {
	if x, ok := x.GetX().(*Item_GroupNameChange); ok {
		return x.GroupNameChange
	}
	return nil
}

func (x *Item) GetGroupAvatarChange() *GroupAvatarChangeItem {
	if x, ok := x.GetX().(*Item_GroupAvatarChange); ok {
		return x.GroupAvatarChange
	}
	return nil
}

func (x *Item) GetGroupParticipantChange() *GroupParticipantChangeItem {
	if x, ok := x.GetX().(*Item_GroupParticipantChange); ok {
		return x.GroupParticipantChange
	}
	return nil
}

func (x *Item) GetTapback() *TapbackItem {
	if x, ok := x.GetX().(*Item_Tapback); ok {
		return x.Tapback
	}
	return nil
}

func (x *Item) GetPhantom() *PhantomItem {
	if x, ok := x.GetX().(*Item_Phantom); ok {
		return x.Phantom
	}
	return nil
}

type isItem_X interface {
	isItem_X()
}

type Item_Text struct {
	Text *TextItem `protobuf:"bytes,25,opt,name=Text,proto3,oneof"`
}

type Item_Attachment struct {
	Attachment *AttachmentItem `protobuf:"bytes,26,opt,name=Attachment,proto3,oneof"`
}

type Item_Typing struct {
	Typing *TypingItem `protobuf:"bytes,27,opt,name=Typing,proto3,oneof"`
}

type Item_Plugin struct {
	Plugin *PluginItem `protobuf:"bytes,28,opt,name=Plugin,proto3,oneof"`
}

type Item_GroupNameChange struct {
	GroupNameChange *GroupNameChangeItem `protobuf:"bytes,29,opt,name=GroupNameChange,proto3,oneof"`
}

type Item_GroupAvatarChange struct {
	GroupAvatarChange *GroupAvatarChangeItem `protobuf:"bytes,30,opt,name=GroupAvatarChange,proto3,oneof"`
}

type Item_GroupParticipantChange struct {
	GroupParticipantChange *GroupParticipantChangeItem `protobuf:"bytes,31,opt,name=GroupParticipantChange,proto3,oneof"`
}

type Item_Tapback struct {
	Tapback *TapbackItem `protobuf:"bytes,32,opt,name=Tapback,proto3,oneof"`
}

type Item_Phantom struct {
	Phantom *PhantomItem `protobuf:"bytes,33,opt,name=Phantom,proto3,oneof"`
}

func (*Item_Text) isItem_X() {}

func (*Item_Attachment) isItem_X() {}

func (*Item_Typing) isItem_X() {}

func (*Item_Plugin) isItem_X() {}

func (*Item_GroupNameChange) isItem_X() {}

func (*Item_GroupAvatarChange) isItem_X() {}

func (*Item_GroupParticipantChange) isItem_X() {}

func (*Item_Tapback) isItem_X() {}

func (*Item_Phantom) isItem_X() {}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GUID string                 `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=Time,proto3" json:"Time,omitempty"`
	//    optional string Subject = 3;
	//    string Text = 4;
	ChatGUID *GUID `protobuf:"bytes,5,opt,name=ChatGUID,proto3" json:"ChatGUID,omitempty"`
	Sender   *GUID `protobuf:"bytes,6,opt,name=Sender,proto3,oneof" json:"Sender,omitempty"`
	// optional GUID Target = 7;
	IsFromMe    bool                   `protobuf:"varint,8,opt,name=IsFromMe,proto3" json:"IsFromMe,omitempty"`
	IsRead      bool                   `protobuf:"varint,9,opt,name=IsRead,proto3" json:"IsRead,omitempty"`
	ReadAt      *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=ReadAt,proto3,oneof" json:"ReadAt,omitempty"`
	IsDelivered bool                   `protobuf:"varint,11,opt,name=IsDelivered,proto3" json:"IsDelivered,omitempty"`
	IsSent      bool                   `protobuf:"varint,12,opt,name=IsSent,proto3" json:"IsSent,omitempty"`
	//    bool IsEmote = 13;
	IsAudioMessage bool           `protobuf:"varint,14,opt,name=IsAudioMessage,proto3" json:"IsAudioMessage,omitempty"`
	ThreadTarget   *MessageTarget `protobuf:"bytes,15,opt,name=ThreadTarget,proto3,oneof" json:"ThreadTarget,omitempty"`
	// optional Tapback Tapback = 16;
	// repeated Attachment attachments = 17;
	ErrorNotice *string `protobuf:"bytes,18,opt,name=ErrorNotice,proto3,oneof" json:"ErrorNotice,omitempty"`
	// ItemType ItemType = 19;
	// optional GroupActionType GroupActionType = 20;
	// optional string NewGroupName = 21;
	// optional RichLink RichLink = 22;
	MessageMetadata *Mapping      `protobuf:"bytes,23,opt,name=MessageMetadata,proto3,oneof" json:"MessageMetadata,omitempty"`
	Correlations    *Correlations `protobuf:"bytes,24,opt,name=Correlations,proto3,oneof" json:"Correlations,omitempty"`
	Service         string        `protobuf:"bytes,25,opt,name=Service,proto3" json:"Service,omitempty"`
	Items           []*Item       `protobuf:"bytes,26,rep,name=Items,proto3" json:"Items,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{23}
}

func (x *Message) GetGUID() string {
	if x != nil {
		return x.GUID
	}
	return ""
}

func (x *Message) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Message) GetChatGUID() *GUID {
	if x != nil {
		return x.ChatGUID
	}
	return nil
}

func (x *Message) GetSender() *GUID {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Message) GetIsFromMe() bool {
	if x != nil {
		return x.IsFromMe
	}
	return false
}

func (x *Message) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *Message) GetReadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReadAt
	}
	return nil
}

func (x *Message) GetIsDelivered() bool {
	if x != nil {
		return x.IsDelivered
	}
	return false
}

func (x *Message) GetIsSent() bool {
	if x != nil {
		return x.IsSent
	}
	return false
}

func (x *Message) GetIsAudioMessage() bool {
	if x != nil {
		return x.IsAudioMessage
	}
	return false
}

func (x *Message) GetThreadTarget() *MessageTarget {
	if x != nil {
		return x.ThreadTarget
	}
	return nil
}

func (x *Message) GetErrorNotice() string {
	if x != nil && x.ErrorNotice != nil {
		return *x.ErrorNotice
	}
	return ""
}

func (x *Message) GetMessageMetadata() *Mapping {
	if x != nil {
		return x.MessageMetadata
	}
	return nil
}

func (x *Message) GetCorrelations() *Correlations {
	if x != nil {
		return x.Correlations
	}
	return nil
}

func (x *Message) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *Message) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type ReadReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderGUID   *GUID                  `protobuf:"bytes,1,opt,name=SenderGUID,proto3,oneof" json:"SenderGUID,omitempty"`
	IsFromMe     bool                   `protobuf:"varint,2,opt,name=IsFromMe,proto3" json:"IsFromMe,omitempty"`
	ChatGUID     *GUID                  `protobuf:"bytes,3,opt,name=ChatGUID,proto3" json:"ChatGUID,omitempty"`
	ReadUpTo     string                 `protobuf:"bytes,4,opt,name=ReadUpTo,proto3" json:"ReadUpTo,omitempty"`
	ReadAt       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=ReadAt,proto3" json:"ReadAt,omitempty"`
	Correlations *Correlations          `protobuf:"bytes,6,opt,name=Correlations,proto3,oneof" json:"Correlations,omitempty"`
}

func (x *ReadReceipt) Reset() {
	*x = ReadReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReceipt) ProtoMessage() {}

func (x *ReadReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReceipt.ProtoReflect.Descriptor instead.
func (*ReadReceipt) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{24}
}

func (x *ReadReceipt) GetSenderGUID() *GUID {
	if x != nil {
		return x.SenderGUID
	}
	return nil
}

func (x *ReadReceipt) GetIsFromMe() bool {
	if x != nil {
		return x.IsFromMe
	}
	return false
}

func (x *ReadReceipt) GetChatGUID() *GUID {
	if x != nil {
		return x.ChatGUID
	}
	return nil
}

func (x *ReadReceipt) GetReadUpTo() string {
	if x != nil {
		return x.ReadUpTo
	}
	return ""
}

func (x *ReadReceipt) GetReadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReadAt
	}
	return nil
}

func (x *ReadReceipt) GetCorrelations() *Correlations {
	if x != nil {
		return x.Correlations
	}
	return nil
}

type TypingNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatGUID     *GUID         `protobuf:"bytes,1,opt,name=ChatGUID,proto3" json:"ChatGUID,omitempty"`
	Typing       bool          `protobuf:"varint,2,opt,name=Typing,proto3" json:"Typing,omitempty"`
	Correlations *Correlations `protobuf:"bytes,3,opt,name=Correlations,proto3,oneof" json:"Correlations,omitempty"`
}

func (x *TypingNotification) Reset() {
	*x = TypingNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypingNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypingNotification) ProtoMessage() {}

func (x *TypingNotification) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypingNotification.ProtoReflect.Descriptor instead.
func (*TypingNotification) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{25}
}

func (x *TypingNotification) GetChatGUID() *GUID {
	if x != nil {
		return x.ChatGUID
	}
	return nil
}

func (x *TypingNotification) GetTyping() bool {
	if x != nil {
		return x.Typing
	}
	return false
}

func (x *TypingNotification) GetCorrelations() *Correlations {
	if x != nil {
		return x.Correlations
	}
	return nil
}

type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName         *string  `protobuf:"bytes,1,opt,name=FirstName,proto3,oneof" json:"FirstName,omitempty"`
	LastName          *string  `protobuf:"bytes,2,opt,name=LastName,proto3,oneof" json:"LastName,omitempty"`
	Nickname          *string  `protobuf:"bytes,3,opt,name=Nickname,proto3,oneof" json:"Nickname,omitempty"`
	Avatar            []byte   `protobuf:"bytes,4,opt,name=Avatar,proto3,oneof" json:"Avatar,omitempty"`
	Phones            []string `protobuf:"bytes,5,rep,name=Phones,proto3" json:"Phones,omitempty"`
	Emails            []string `protobuf:"bytes,6,rep,name=Emails,proto3" json:"Emails,omitempty"`
	UserGUID          *GUID    `protobuf:"bytes,7,opt,name=UserGUID,proto3,oneof" json:"UserGUID,omitempty"`
	PrimaryIdentifier *string  `protobuf:"bytes,8,opt,name=PrimaryIdentifier,proto3,oneof" json:"PrimaryIdentifier,omitempty"`
	CorrelationID     *string  `protobuf:"bytes,9,opt,name=CorrelationID,proto3,oneof" json:"CorrelationID,omitempty"`
}

func (x *Contact) Reset() {
	*x = Contact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{26}
}

func (x *Contact) GetFirstName() string {
	if x != nil && x.FirstName != nil {
		return *x.FirstName
	}
	return ""
}

func (x *Contact) GetLastName() string {
	if x != nil && x.LastName != nil {
		return *x.LastName
	}
	return ""
}

func (x *Contact) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *Contact) GetAvatar() []byte {
	if x != nil {
		return x.Avatar
	}
	return nil
}

func (x *Contact) GetPhones() []string {
	if x != nil {
		return x.Phones
	}
	return nil
}

func (x *Contact) GetEmails() []string {
	if x != nil {
		return x.Emails
	}
	return nil
}

func (x *Contact) GetUserGUID() *GUID {
	if x != nil {
		return x.UserGUID
	}
	return nil
}

func (x *Contact) GetPrimaryIdentifier() string {
	if x != nil && x.PrimaryIdentifier != nil {
		return *x.PrimaryIdentifier
	}
	return ""
}

func (x *Contact) GetCorrelationID() string {
	if x != nil && x.CorrelationID != nil {
		return *x.CorrelationID
	}
	return ""
}

type ChatInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GUID          *GUID    `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	DisplayName   *string  `protobuf:"bytes,2,opt,name=DisplayName,proto3,oneof" json:"DisplayName,omitempty"`
	Members       []string `protobuf:"bytes,3,rep,name=Members,proto3" json:"Members,omitempty"`
	NoCreateRoom  *bool    `protobuf:"varint,4,opt,name=NoCreateRoom,proto3,oneof" json:"NoCreateRoom,omitempty"`
	CorrelationID *string  `protobuf:"bytes,5,opt,name=CorrelationID,proto3,oneof" json:"CorrelationID,omitempty"`
}

func (x *ChatInfo) Reset() {
	*x = ChatInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatInfo) ProtoMessage() {}

func (x *ChatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatInfo.ProtoReflect.Descriptor instead.
func (*ChatInfo) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{27}
}

func (x *ChatInfo) GetGUID() *GUID {
	if x != nil {
		return x.GUID
	}
	return nil
}

func (x *ChatInfo) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *ChatInfo) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *ChatInfo) GetNoCreateRoom() bool {
	if x != nil && x.NoCreateRoom != nil {
		return *x.NoCreateRoom
	}
	return false
}

func (x *ChatInfo) GetCorrelationID() string {
	if x != nil && x.CorrelationID != nil {
		return *x.CorrelationID
	}
	return ""
}

type SendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GUID    string                 `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	Service string                 `protobuf:"bytes,2,opt,name=Service,proto3" json:"Service,omitempty"`
	Time    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *SendResponse) Reset() {
	*x = SendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResponse) ProtoMessage() {}

func (x *SendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResponse.ProtoReflect.Descriptor instead.
func (*SendResponse) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{28}
}

func (x *SendResponse) GetGUID() string {
	if x != nil {
		return x.GUID
	}
	return ""
}

func (x *SendResponse) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *SendResponse) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{29}
}

func (x *Error) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SendMessageStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GUID         string        `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	ChatGUID     *GUID         `protobuf:"bytes,2,opt,name=ChatGUID,proto3" json:"ChatGUID,omitempty"`
	Status       string        `protobuf:"bytes,3,opt,name=Status,proto3" json:"Status,omitempty"`
	Service      string        `protobuf:"bytes,4,opt,name=Service,proto3" json:"Service,omitempty"`
	Error        *Error        `protobuf:"bytes,5,opt,name=Error,proto3,oneof" json:"Error,omitempty"`
	Correlations *Correlations `protobuf:"bytes,6,opt,name=Correlations,proto3,oneof" json:"Correlations,omitempty"`
}

func (x *SendMessageStatus) Reset() {
	*x = SendMessageStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageStatus) ProtoMessage() {}

func (x *SendMessageStatus) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageStatus.ProtoReflect.Descriptor instead.
func (*SendMessageStatus) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{30}
}

func (x *SendMessageStatus) GetGUID() string {
	if x != nil {
		return x.GUID
	}
	return ""
}

func (x *SendMessageStatus) GetChatGUID() *GUID {
	if x != nil {
		return x.ChatGUID
	}
	return nil
}

func (x *SendMessageStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SendMessageStatus) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *SendMessageStatus) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *SendMessageStatus) GetCorrelations() *Correlations {
	if x != nil {
		return x.Correlations
	}
	return nil
}

type StartupSyncHookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkipSync bool `protobuf:"varint,1,opt,name=SkipSync,proto3" json:"SkipSync,omitempty"`
}

func (x *StartupSyncHookResponse) Reset() {
	*x = StartupSyncHookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartupSyncHookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartupSyncHookResponse) ProtoMessage() {}

func (x *StartupSyncHookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartupSyncHookResponse.ProtoReflect.Descriptor instead.
func (*StartupSyncHookResponse) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{31}
}

func (x *StartupSyncHookResponse) GetSkipSync() bool {
	if x != nil {
		return x.SkipSync
	}
	return false
}

type SendTextMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text     string    `protobuf:"bytes,1,opt,name=Text,proto3" json:"Text,omitempty"`
	RichLink *RichLink `protobuf:"bytes,2,opt,name=RichLink,proto3,oneof" json:"RichLink,omitempty"`
}

func (x *SendTextMessageRequest) Reset() {
	*x = SendTextMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTextMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTextMessageRequest) ProtoMessage() {}

func (x *SendTextMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTextMessageRequest.ProtoReflect.Descriptor instead.
func (*SendTextMessageRequest) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{32}
}

func (x *SendTextMessageRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SendTextMessageRequest) GetRichLink() *RichLink {
	if x != nil {
		return x.RichLink
	}
	return nil
}

type SendMediaMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text           string      `protobuf:"bytes,1,opt,name=Text,proto3" json:"Text,omitempty"`
	Attachment     *Attachment `protobuf:"bytes,2,opt,name=Attachment,proto3" json:"Attachment,omitempty"`
	IsAudioMessage bool        `protobuf:"varint,3,opt,name=IsAudioMessage,proto3" json:"IsAudioMessage,omitempty"`
}

func (x *SendMediaMessageRequest) Reset() {
	*x = SendMediaMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMediaMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMediaMessageRequest) ProtoMessage() {}

func (x *SendMediaMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMediaMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMediaMessageRequest) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{33}
}

func (x *SendMediaMessageRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SendMediaMessageRequest) GetAttachment() *Attachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *SendMediaMessageRequest) GetIsAudioMessage() bool {
	if x != nil {
		return x.IsAudioMessage
	}
	return false
}

type SendTapbackMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target *MessageTarget `protobuf:"bytes,1,opt,name=Target,proto3" json:"Target,omitempty"`
	Type   TapbackType    `protobuf:"varint,2,opt,name=Type,proto3,enum=TapbackType" json:"Type,omitempty"`
}

func (x *SendTapbackMessageRequest) Reset() {
	*x = SendTapbackMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTapbackMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTapbackMessageRequest) ProtoMessage() {}

func (x *SendTapbackMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTapbackMessageRequest.ProtoReflect.Descriptor instead.
func (*SendTapbackMessageRequest) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{34}
}

func (x *SendTapbackMessageRequest) GetTarget() *MessageTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *SendTapbackMessageRequest) GetType() TapbackType {
	if x != nil {
		return x.Type
	}
	return TapbackType_TapbackNothing
}

type SendMessagePart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Part:
	//	*SendMessagePart_Text
	//	*SendMessagePart_Media
	//	*SendMessagePart_Tapback
	Part isSendMessagePart_Part `protobuf_oneof:"Part"`
}

func (x *SendMessagePart) Reset() {
	*x = SendMessagePart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessagePart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessagePart) ProtoMessage() {}

func (x *SendMessagePart) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessagePart.ProtoReflect.Descriptor instead.
func (*SendMessagePart) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{35}
}

func (m *SendMessagePart) GetPart() isSendMessagePart_Part {
	if m != nil {
		return m.Part
	}
	return nil
}

func (x *SendMessagePart) GetText() *SendTextMessageRequest {
	if x, ok := x.GetPart().(*SendMessagePart_Text); ok {
		return x.Text
	}
	return nil
}

func (x *SendMessagePart) GetMedia() *SendMediaMessageRequest {
	if x, ok := x.GetPart().(*SendMessagePart_Media); ok {
		return x.Media
	}
	return nil
}

func (x *SendMessagePart) GetTapback() *SendTapbackMessageRequest {
	if x, ok := x.GetPart().(*SendMessagePart_Tapback); ok {
		return x.Tapback
	}
	return nil
}

type isSendMessagePart_Part interface {
	isSendMessagePart_Part()
}

type SendMessagePart_Text struct {
	Text *SendTextMessageRequest `protobuf:"bytes,1,opt,name=Text,proto3,oneof"`
}

type SendMessagePart_Media struct {
	Media *SendMediaMessageRequest `protobuf:"bytes,2,opt,name=Media,proto3,oneof"`
}

type SendMessagePart_Tapback struct {
	Tapback *SendTapbackMessageRequest `protobuf:"bytes,3,opt,name=Tapback,proto3,oneof"`
}

func (*SendMessagePart_Text) isSendMessagePart_Part() {}

func (*SendMessagePart_Media) isSendMessagePart_Part() {}

func (*SendMessagePart_Tapback) isSendMessagePart_Part() {}

type SendMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatGUID    *GUID              `protobuf:"bytes,1,opt,name=ChatGUID,proto3" json:"ChatGUID,omitempty"`
	ReplyTarget *MessageTarget     `protobuf:"bytes,2,opt,name=ReplyTarget,proto3,oneof" json:"ReplyTarget,omitempty"`
	Metadata    *Mapping           `protobuf:"bytes,3,opt,name=Metadata,proto3,oneof" json:"Metadata,omitempty"`
	Parts       []*SendMessagePart `protobuf:"bytes,4,rep,name=Parts,proto3" json:"Parts,omitempty"`
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{36}
}

func (x *SendMessageRequest) GetChatGUID() *GUID {
	if x != nil {
		return x.ChatGUID
	}
	return nil
}

func (x *SendMessageRequest) GetReplyTarget() *MessageTarget {
	if x != nil {
		return x.ReplyTarget
	}
	return nil
}

func (x *SendMessageRequest) GetMetadata() *Mapping {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SendMessageRequest) GetParts() []*SendMessagePart {
	if x != nil {
		return x.Parts
	}
	return nil
}

type SendReadReceiptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatGUID *GUID  `protobuf:"bytes,1,opt,name=ChatGUID,proto3" json:"ChatGUID,omitempty"`
	ReadUpTo string `protobuf:"bytes,2,opt,name=ReadUpTo,proto3" json:"ReadUpTo,omitempty"`
}

func (x *SendReadReceiptRequest) Reset() {
	*x = SendReadReceiptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendReadReceiptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendReadReceiptRequest) ProtoMessage() {}

func (x *SendReadReceiptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendReadReceiptRequest.ProtoReflect.Descriptor instead.
func (*SendReadReceiptRequest) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{37}
}

func (x *SendReadReceiptRequest) GetChatGUID() *GUID {
	if x != nil {
		return x.ChatGUID
	}
	return nil
}

func (x *SendReadReceiptRequest) GetReadUpTo() string {
	if x != nil {
		return x.ReadUpTo
	}
	return ""
}

type SetTypingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatGUID *GUID `protobuf:"bytes,1,opt,name=ChatGUID,proto3" json:"ChatGUID,omitempty"`
	Typing   bool  `protobuf:"varint,2,opt,name=Typing,proto3" json:"Typing,omitempty"`
}

func (x *SetTypingRequest) Reset() {
	*x = SetTypingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTypingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTypingRequest) ProtoMessage() {}

func (x *SetTypingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTypingRequest.ProtoReflect.Descriptor instead.
func (*SetTypingRequest) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{38}
}

func (x *SetTypingRequest) GetChatGUID() *GUID {
	if x != nil {
		return x.ChatGUID
	}
	return nil
}

func (x *SetTypingRequest) GetTyping() bool {
	if x != nil {
		return x.Typing
	}
	return false
}

type GetChatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatGUID *GUID `protobuf:"bytes,1,opt,name=ChatGUID,proto3" json:"ChatGUID,omitempty"`
}

func (x *GetChatRequest) Reset() {
	*x = GetChatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatRequest) ProtoMessage() {}

func (x *GetChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatRequest.ProtoReflect.Descriptor instead.
func (*GetChatRequest) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{39}
}

func (x *GetChatRequest) GetChatGUID() *GUID {
	if x != nil {
		return x.ChatGUID
	}
	return nil
}

type GetChatAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatGUID *GUID `protobuf:"bytes,1,opt,name=ChatGUID,proto3" json:"ChatGUID,omitempty"`
}

func (x *GetChatAvatarRequest) Reset() {
	*x = GetChatAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatAvatarRequest) ProtoMessage() {}

func (x *GetChatAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatAvatarRequest.ProtoReflect.Descriptor instead.
func (*GetChatAvatarRequest) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{40}
}

func (x *GetChatAvatarRequest) GetChatGUID() *GUID {
	if x != nil {
		return x.ChatGUID
	}
	return nil
}

type GetChatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinTimestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=MinTimestamp,proto3" json:"MinTimestamp,omitempty"`
}

func (x *GetChatsRequest) Reset() {
	*x = GetChatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatsRequest) ProtoMessage() {}

func (x *GetChatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatsRequest.ProtoReflect.Descriptor instead.
func (*GetChatsRequest) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{41}
}

func (x *GetChatsRequest) GetMinTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.MinTimestamp
	}
	return nil
}

type GetContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string `protobuf:"bytes,1,opt,name=Identifier,proto3" json:"Identifier,omitempty"`
}

func (x *GetContactRequest) Reset() {
	*x = GetContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactRequest) ProtoMessage() {}

func (x *GetContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactRequest.ProtoReflect.Descriptor instead.
func (*GetContactRequest) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{42}
}

func (x *GetContactRequest) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

type GetRecentMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatGUID *GUID `protobuf:"bytes,1,opt,name=ChatGUID,proto3" json:"ChatGUID,omitempty"`
	Limit    int64 `protobuf:"varint,2,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetRecentMessagesRequest) Reset() {
	*x = GetRecentMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecentMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentMessagesRequest) ProtoMessage() {}

func (x *GetRecentMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetRecentMessagesRequest) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{43}
}

func (x *GetRecentMessagesRequest) GetChatGUID() *GUID {
	if x != nil {
		return x.ChatGUID
	}
	return nil
}

func (x *GetRecentMessagesRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetMessagesAfterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatGUID  *GUID                  `protobuf:"bytes,1,opt,name=ChatGUID,proto3" json:"ChatGUID,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Limit     int64                  `protobuf:"varint,3,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetMessagesAfterRequest) Reset() {
	*x = GetMessagesAfterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessagesAfterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesAfterRequest) ProtoMessage() {}

func (x *GetMessagesAfterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesAfterRequest.ProtoReflect.Descriptor instead.
func (*GetMessagesAfterRequest) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{44}
}

func (x *GetMessagesAfterRequest) GetChatGUID() *GUID {
	if x != nil {
		return x.ChatGUID
	}
	return nil
}

func (x *GetMessagesAfterRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *GetMessagesAfterRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ResolveIdentifierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string `protobuf:"bytes,1,opt,name=Identifier,proto3" json:"Identifier,omitempty"`
}

func (x *ResolveIdentifierRequest) Reset() {
	*x = ResolveIdentifierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveIdentifierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveIdentifierRequest) ProtoMessage() {}

func (x *ResolveIdentifierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveIdentifierRequest.ProtoReflect.Descriptor instead.
func (*ResolveIdentifierRequest) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{45}
}

func (x *ResolveIdentifierRequest) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

type ResolveIdentifierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GUID *GUID `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
}

func (x *ResolveIdentifierResponse) Reset() {
	*x = ResolveIdentifierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveIdentifierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveIdentifierResponse) ProtoMessage() {}

func (x *ResolveIdentifierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveIdentifierResponse.ProtoReflect.Descriptor instead.
func (*ResolveIdentifierResponse) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{46}
}

func (x *ResolveIdentifierResponse) GetGUID() *GUID {
	if x != nil {
		return x.GUID
	}
	return nil
}

type PrepareDMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GUID *GUID `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
}

func (x *PrepareDMRequest) Reset() {
	*x = PrepareDMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareDMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareDMRequest) ProtoMessage() {}

func (x *PrepareDMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareDMRequest.ProtoReflect.Descriptor instead.
func (*PrepareDMRequest) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{47}
}

func (x *PrepareDMRequest) GetGUID() *GUID {
	if x != nil {
		return x.GUID
	}
	return nil
}

type LogLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string   `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	Level    string   `protobuf:"bytes,2,opt,name=Level,proto3" json:"Level,omitempty"`
	Module   string   `protobuf:"bytes,3,opt,name=Module,proto3" json:"Module,omitempty"`
	Metadata *Mapping `protobuf:"bytes,4,opt,name=Metadata,proto3" json:"Metadata,omitempty"`
}

func (x *LogLine) Reset() {
	*x = LogLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogLine) ProtoMessage() {}

func (x *LogLine) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogLine.ProtoReflect.Descriptor instead.
func (*LogLine) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{48}
}

func (x *LogLine) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogLine) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *LogLine) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *LogLine) GetMetadata() *Mapping {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type BridgeStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateEvent string   `protobuf:"bytes,1,opt,name=StateEvent,json=state_event,proto3" json:"StateEvent,omitempty"`
	Timestamp  int64    `protobuf:"varint,2,opt,name=Timestamp,json=timestamp,proto3" json:"Timestamp,omitempty"`
	TTL        int64    `protobuf:"varint,3,opt,name=TTL,json=ttl,proto3" json:"TTL,omitempty"`
	Source     string   `protobuf:"bytes,4,opt,name=Source,json=source,proto3" json:"Source,omitempty"`
	Error      *string  `protobuf:"bytes,5,opt,name=Error,json=error,proto3,oneof" json:"Error,omitempty"`
	Message    *string  `protobuf:"bytes,6,opt,name=Message,json=message,proto3,oneof" json:"Message,omitempty"`
	UserID     *string  `protobuf:"bytes,7,opt,name=UserID,json=user_id,proto3,oneof" json:"UserID,omitempty"`
	RemoteID   *string  `protobuf:"bytes,8,opt,name=RemoteID,json=remote_id,proto3,oneof" json:"RemoteID,omitempty"`
	RemoteName *string  `protobuf:"bytes,9,opt,name=RemoteName,json=remote_name,proto3,oneof" json:"RemoteName,omitempty"`
	Info       *Mapping `protobuf:"bytes,10,opt,name=Info,json=info,proto3,oneof" json:"Info,omitempty"`
}

func (x *BridgeStatus) Reset() {
	*x = BridgeStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeStatus) ProtoMessage() {}

func (x *BridgeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BridgeStatus.ProtoReflect.Descriptor instead.
func (*BridgeStatus) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{49}
}

func (x *BridgeStatus) GetStateEvent() string {
	if x != nil {
		return x.StateEvent
	}
	return ""
}

func (x *BridgeStatus) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BridgeStatus) GetTTL() int64 {
	if x != nil {
		return x.TTL
	}
	return 0
}

func (x *BridgeStatus) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *BridgeStatus) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *BridgeStatus) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *BridgeStatus) GetUserID() string {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return ""
}

func (x *BridgeStatus) GetRemoteID() string {
	if x != nil && x.RemoteID != nil {
		return *x.RemoteID
	}
	return ""
}

func (x *BridgeStatus) GetRemoteName() string {
	if x != nil && x.RemoteName != nil {
		return *x.RemoteName
	}
	return ""
}

func (x *BridgeStatus) GetInfo() *Mapping {
	if x != nil {
		return x.Info
	}
	return nil
}

type ContactList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contacts []*Contact `protobuf:"bytes,1,rep,name=Contacts,proto3" json:"Contacts,omitempty"`
}

func (x *ContactList) Reset() {
	*x = ContactList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactList) ProtoMessage() {}

func (x *ContactList) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactList.ProtoReflect.Descriptor instead.
func (*ContactList) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{50}
}

func (x *ContactList) GetContacts() []*Contact {
	if x != nil {
		return x.Contacts
	}
	return nil
}

type MessageList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *string    `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
	Messages []*Message `protobuf:"bytes,10,rep,name=Messages,proto3" json:"Messages,omitempty"`
}

func (x *MessageList) Reset() {
	*x = MessageList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageList) ProtoMessage() {}

func (x *MessageList) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageList.ProtoReflect.Descriptor instead.
func (*MessageList) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{51}
}

func (x *MessageList) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *MessageList) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type ChatIDList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chats []*GUID `protobuf:"bytes,1,rep,name=chats,proto3" json:"chats,omitempty"`
}

func (x *ChatIDList) Reset() {
	*x = ChatIDList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatIDList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatIDList) ProtoMessage() {}

func (x *ChatIDList) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatIDList.ProtoReflect.Descriptor instead.
func (*ChatIDList) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{52}
}

func (x *ChatIDList) GetChats() []*GUID {
	if x != nil {
		return x.Chats
	}
	return nil
}

type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{53}
}

type Pong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Pong) Reset() {
	*x = Pong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{54}
}

type HistoryQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatGUID   *GUID                  `protobuf:"bytes,1,opt,name=ChatGUID,proto3" json:"ChatGUID,omitempty"`
	BeforeDate *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=beforeDate,proto3,oneof" json:"beforeDate,omitempty"`
	AfterDate  *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=afterDate,proto3,oneof" json:"afterDate,omitempty"`
	BeforeGUID *string                `protobuf:"bytes,17,opt,name=beforeGUID,proto3,oneof" json:"beforeGUID,omitempty"`
	AfterGUID  *string                `protobuf:"bytes,18,opt,name=afterGUID,proto3,oneof" json:"afterGUID,omitempty"`
	Limit      *int64                 `protobuf:"varint,19,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
}

func (x *HistoryQuery) Reset() {
	*x = HistoryQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryQuery) ProtoMessage() {}

func (x *HistoryQuery) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryQuery.ProtoReflect.Descriptor instead.
func (*HistoryQuery) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{55}
}

func (x *HistoryQuery) GetChatGUID() *GUID {
	if x != nil {
		return x.ChatGUID
	}
	return nil
}

func (x *HistoryQuery) GetBeforeDate() *timestamppb.Timestamp {
	if x != nil {
		return x.BeforeDate
	}
	return nil
}

func (x *HistoryQuery) GetAfterDate() *timestamppb.Timestamp {
	if x != nil {
		return x.AfterDate
	}
	return nil
}

func (x *HistoryQuery) GetBeforeGUID() string {
	if x != nil && x.BeforeGUID != nil {
		return *x.BeforeGUID
	}
	return ""
}

func (x *HistoryQuery) GetAfterGUID() string {
	if x != nil && x.AfterGUID != nil {
		return *x.AfterGUID
	}
	return ""
}

func (x *HistoryQuery) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	IsResponse bool  `protobuf:"varint,2,opt,name=IsResponse,proto3" json:"IsResponse,omitempty"`
	// Types that are assignable to Command:
	//	*Payload_Message
	//	*Payload_ReadReceipt
	//	*Payload_TypingNotification
	//	*Payload_Chat
	//	*Payload_BridgeStatus
	//	*Payload_Contact
	//	*Payload_SendMessageStatus
	//	*Payload_Log
	//	*Payload_Contacts
	//	*Payload_Error
	//	*Payload_Ack
	//	*Payload_SendMessage
	//	*Payload_SendReadReceipt
	//	*Payload_SetTyping
	//	*Payload_GetChats
	//	*Payload_GetChat_
	//	*Payload_GetChatAvatar
	//	*Payload_GetContact_
	//	*Payload_GetContactList
	//	*Payload_GetMessagesAfter
	//	*Payload_PreStartupSync
	//	*Payload_ResolveIdentifier
	//	*Payload_PrepareDM
	//	*Payload_Ping
	//	*Payload_Pong
	//	*Payload_Messages
	//	*Payload_GetRecentMessages
	//	*Payload_ChatList
	//	*Payload_Attachment
	//	*Payload_SendResponse
	//	*Payload_SyncHookResponse
	//	*Payload_ResolveIdentifierResponse
	//	*Payload_Null
	//	*Payload_GUID
	//	*Payload_HistoryQuery
	Command isPayload_Command `protobuf_oneof:"Command"`
}

func (x *Payload) Reset() {
	*x = Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipc_v1_v1_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_v1_v1_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_ipc_v1_v1_proto_rawDescGZIP(), []int{56}
}

func (x *Payload) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Payload) GetIsResponse() bool {
	if x != nil {
		return x.IsResponse
	}
	return false
}

func (m *Payload) GetCommand() isPayload_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (x *Payload) GetMessage() *Message {
	if x, ok := x.GetCommand().(*Payload_Message); ok {
		return x.Message
	}
	return nil
}

func (x *Payload) GetReadReceipt() *ReadReceipt {
	if x, ok := x.GetCommand().(*Payload_ReadReceipt); ok {
		return x.ReadReceipt
	}
	return nil
}

func (x *Payload) GetTypingNotification() *TypingNotification {
	if x, ok := x.GetCommand().(*Payload_TypingNotification); ok {
		return x.TypingNotification
	}
	return nil
}

func (x *Payload) GetChat() *ChatInfo {
	if x, ok := x.GetCommand().(*Payload_Chat); ok {
		return x.Chat
	}
	return nil
}

func (x *Payload) GetBridgeStatus() *BridgeStatus {
	if x, ok := x.GetCommand().(*Payload_BridgeStatus); ok {
		return x.BridgeStatus
	}
	return nil
}

func (x *Payload) GetContact() *Contact {
	if x, ok := x.GetCommand().(*Payload_Contact); ok {
		return x.Contact
	}
	return nil
}

func (x *Payload) GetSendMessageStatus() *SendMessageStatus {
	if x, ok := x.GetCommand().(*Payload_SendMessageStatus); ok {
		return x.SendMessageStatus
	}
	return nil
}

func (x *Payload) GetLog() *LogLine {
	if x, ok := x.GetCommand().(*Payload_Log); ok {
		return x.Log
	}
	return nil
}

func (x *Payload) GetContacts() *ContactList {
	if x, ok := x.GetCommand().(*Payload_Contacts); ok {
		return x.Contacts
	}
	return nil
}

func (x *Payload) GetError() *Error {
	if x, ok := x.GetCommand().(*Payload_Error); ok {
		return x.Error
	}
	return nil
}

func (x *Payload) GetAck() bool {
	if x, ok := x.GetCommand().(*Payload_Ack); ok {
		return x.Ack
	}
	return false
}

func (x *Payload) GetSendMessage() *SendMessageRequest {
	if x, ok := x.GetCommand().(*Payload_SendMessage); ok {
		return x.SendMessage
	}
	return nil
}

func (x *Payload) GetSendReadReceipt() *SendReadReceiptRequest {
	if x, ok := x.GetCommand().(*Payload_SendReadReceipt); ok {
		return x.SendReadReceipt
	}
	return nil
}

func (x *Payload) GetSetTyping() *SetTypingRequest {
	if x, ok := x.GetCommand().(*Payload_SetTyping); ok {
		return x.SetTyping
	}
	return nil
}

func (x *Payload) GetGetChats() *GetChatsRequest {
	if x, ok := x.GetCommand().(*Payload_GetChats); ok {
		return x.GetChats
	}
	return nil
}

func (x *Payload) GetGetChat_() *GetChatRequest {
	if x, ok := x.GetCommand().(*Payload_GetChat_); ok {
		return x.GetChat_
	}
	return nil
}

func (x *Payload) GetGetChatAvatar() *GetChatAvatarRequest {
	if x, ok := x.GetCommand().(*Payload_GetChatAvatar); ok {
		return x.GetChatAvatar
	}
	return nil
}

func (x *Payload) GetGetContact_() *GetContactRequest {
	if x, ok := x.GetCommand().(*Payload_GetContact_); ok {
		return x.GetContact_
	}
	return nil
}

func (x *Payload) GetGetContactList() bool {
	if x, ok := x.GetCommand().(*Payload_GetContactList); ok {
		return x.GetContactList
	}
	return false
}

func (x *Payload) GetGetMessagesAfter() *GetMessagesAfterRequest {
	if x, ok := x.GetCommand().(*Payload_GetMessagesAfter); ok {
		return x.GetMessagesAfter
	}
	return nil
}

func (x *Payload) GetPreStartupSync() bool {
	if x, ok := x.GetCommand().(*Payload_PreStartupSync); ok {
		return x.PreStartupSync
	}
	return false
}

func (x *Payload) GetResolveIdentifier() *ResolveIdentifierRequest {
	if x, ok := x.GetCommand().(*Payload_ResolveIdentifier); ok {
		return x.ResolveIdentifier
	}
	return nil
}

func (x *Payload) GetPrepareDM() *PrepareDMRequest {
	if x, ok := x.GetCommand().(*Payload_PrepareDM); ok {
		return x.PrepareDM
	}
	return nil
}

func (x *Payload) GetPing() *Ping {
	if x, ok := x.GetCommand().(*Payload_Ping); ok {
		return x.Ping
	}
	return nil
}

func (x *Payload) GetPong() *Pong {
	if x, ok := x.GetCommand().(*Payload_Pong); ok {
		return x.Pong
	}
	return nil
}

func (x *Payload) GetMessages() *MessageList {
	if x, ok := x.GetCommand().(*Payload_Messages); ok {
		return x.Messages
	}
	return nil
}

func (x *Payload) GetGetRecentMessages() *GetRecentMessagesRequest {
	if x, ok := x.GetCommand().(*Payload_GetRecentMessages); ok {
		return x.GetRecentMessages
	}
	return nil
}

func (x *Payload) GetChatList() *ChatIDList {
	if x, ok := x.GetCommand().(*Payload_ChatList); ok {
		return x.ChatList
	}
	return nil
}

func (x *Payload) GetAttachment() *Attachment {
	if x, ok := x.GetCommand().(*Payload_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (x *Payload) GetSendResponse() *SendResponse {
	if x, ok := x.GetCommand().(*Payload_SendResponse); ok {
		return x.SendResponse
	}
	return nil
}

func (x *Payload) GetSyncHookResponse() *StartupSyncHookResponse {
	if x, ok := x.GetCommand().(*Payload_SyncHookResponse); ok {
		return x.SyncHookResponse
	}
	return nil
}

func (x *Payload) GetResolveIdentifierResponse() *ResolveIdentifierResponse {
	if x, ok := x.GetCommand().(*Payload_ResolveIdentifierResponse); ok {
		return x.ResolveIdentifierResponse
	}
	return nil
}

func (x *Payload) GetNull() bool {
	if x, ok := x.GetCommand().(*Payload_Null); ok {
		return x.Null
	}
	return false
}

func (x *Payload) GetGUID() *GUID {
	if x, ok := x.GetCommand().(*Payload_GUID); ok {
		return x.GUID
	}
	return nil
}

func (x *Payload) GetHistoryQuery() *HistoryQuery {
	if x, ok := x.GetCommand().(*Payload_HistoryQuery); ok {
		return x.HistoryQuery
	}
	return nil
}

type isPayload_Command interface {
	isPayload_Command()
}

type Payload_Message struct {
	// To Mautrix
	Message *Message `protobuf:"bytes,3,opt,name=Message,proto3,oneof"`
}

type Payload_ReadReceipt struct {
	ReadReceipt *ReadReceipt `protobuf:"bytes,4,opt,name=ReadReceipt,proto3,oneof"`
}

type Payload_TypingNotification struct {
	TypingNotification *TypingNotification `protobuf:"bytes,5,opt,name=TypingNotification,proto3,oneof"`
}

type Payload_Chat struct {
	Chat *ChatInfo `protobuf:"bytes,6,opt,name=Chat,proto3,oneof"`
}

type Payload_BridgeStatus struct {
	BridgeStatus *BridgeStatus `protobuf:"bytes,7,opt,name=BridgeStatus,proto3,oneof"`
}

type Payload_Contact struct {
	Contact *Contact `protobuf:"bytes,8,opt,name=Contact,proto3,oneof"`
}

type Payload_SendMessageStatus struct {
	SendMessageStatus *SendMessageStatus `protobuf:"bytes,9,opt,name=SendMessageStatus,proto3,oneof"`
}

type Payload_Log struct {
	Log *LogLine `protobuf:"bytes,10,opt,name=Log,proto3,oneof"`
}

type Payload_Contacts struct {
	Contacts *ContactList `protobuf:"bytes,11,opt,name=Contacts,proto3,oneof"`
}

type Payload_Error struct {
	Error *Error `protobuf:"bytes,12,opt,name=Error,proto3,oneof"`
}

type Payload_Ack struct {
	Ack bool `protobuf:"varint,13,opt,name=Ack,proto3,oneof"`
}

type Payload_SendMessage struct {
	// To Barcelona
	SendMessage *SendMessageRequest `protobuf:"bytes,14,opt,name=SendMessage,proto3,oneof"`
}

type Payload_SendReadReceipt struct {
	SendReadReceipt *SendReadReceiptRequest `protobuf:"bytes,15,opt,name=SendReadReceipt,proto3,oneof"`
}

type Payload_SetTyping struct {
	SetTyping *SetTypingRequest `protobuf:"bytes,16,opt,name=SetTyping,proto3,oneof"`
}

type Payload_GetChats struct {
	GetChats *GetChatsRequest `protobuf:"bytes,17,opt,name=GetChats,proto3,oneof"`
}

type Payload_GetChat_ struct {
	GetChat_ *GetChatRequest `protobuf:"bytes,18,opt,name=GetChat,proto3,oneof"`
}

type Payload_GetChatAvatar struct {
	GetChatAvatar *GetChatAvatarRequest `protobuf:"bytes,19,opt,name=GetChatAvatar,proto3,oneof"`
}

type Payload_GetContact_ struct {
	GetContact_ *GetContactRequest `protobuf:"bytes,20,opt,name=GetContact,proto3,oneof"`
}

type Payload_GetContactList struct {
	GetContactList bool `protobuf:"varint,21,opt,name=GetContactList,proto3,oneof"`
}

type Payload_GetMessagesAfter struct {
	GetMessagesAfter *GetMessagesAfterRequest `protobuf:"bytes,22,opt,name=GetMessagesAfter,proto3,oneof"`
}

type Payload_PreStartupSync struct {
	PreStartupSync bool `protobuf:"varint,23,opt,name=PreStartupSync,proto3,oneof"`
}

type Payload_ResolveIdentifier struct {
	ResolveIdentifier *ResolveIdentifierRequest `protobuf:"bytes,24,opt,name=ResolveIdentifier,proto3,oneof"`
}

type Payload_PrepareDM struct {
	PrepareDM *PrepareDMRequest `protobuf:"bytes,25,opt,name=PrepareDM,proto3,oneof"`
}

type Payload_Ping struct {
	Ping *Ping `protobuf:"bytes,26,opt,name=Ping,proto3,oneof"`
}

type Payload_Pong struct {
	Pong *Pong `protobuf:"bytes,27,opt,name=Pong,proto3,oneof"`
}

type Payload_Messages struct {
	Messages *MessageList `protobuf:"bytes,28,opt,name=Messages,proto3,oneof"`
}

type Payload_GetRecentMessages struct {
	GetRecentMessages *GetRecentMessagesRequest `protobuf:"bytes,29,opt,name=GetRecentMessages,proto3,oneof"`
}

type Payload_ChatList struct {
	ChatList *ChatIDList `protobuf:"bytes,30,opt,name=ChatList,proto3,oneof"`
}

type Payload_Attachment struct {
	Attachment *Attachment `protobuf:"bytes,31,opt,name=Attachment,proto3,oneof"`
}

type Payload_SendResponse struct {
	SendResponse *SendResponse `protobuf:"bytes,32,opt,name=SendResponse,proto3,oneof"`
}

type Payload_SyncHookResponse struct {
	SyncHookResponse *StartupSyncHookResponse `protobuf:"bytes,33,opt,name=SyncHookResponse,proto3,oneof"`
}

type Payload_ResolveIdentifierResponse struct {
	ResolveIdentifierResponse *ResolveIdentifierResponse `protobuf:"bytes,34,opt,name=ResolveIdentifierResponse,proto3,oneof"`
}

type Payload_Null struct {
	Null bool `protobuf:"varint,35,opt,name=Null,proto3,oneof"`
}

type Payload_GUID struct {
	GUID *GUID `protobuf:"bytes,36,opt,name=GUID,proto3,oneof"`
}

type Payload_HistoryQuery struct {
	HistoryQuery *HistoryQuery `protobuf:"bytes,37,opt,name=HistoryQuery,proto3,oneof"`
}

func (*Payload_Message) isPayload_Command() {}

func (*Payload_ReadReceipt) isPayload_Command() {}

func (*Payload_TypingNotification) isPayload_Command() {}

func (*Payload_Chat) isPayload_Command() {}

func (*Payload_BridgeStatus) isPayload_Command() {}

func (*Payload_Contact) isPayload_Command() {}

func (*Payload_SendMessageStatus) isPayload_Command() {}

func (*Payload_Log) isPayload_Command() {}

func (*Payload_Contacts) isPayload_Command() {}

func (*Payload_Error) isPayload_Command() {}

func (*Payload_Ack) isPayload_Command() {}

func (*Payload_SendMessage) isPayload_Command() {}

func (*Payload_SendReadReceipt) isPayload_Command() {}

func (*Payload_SetTyping) isPayload_Command() {}

func (*Payload_GetChats) isPayload_Command() {}

func (*Payload_GetChat_) isPayload_Command() {}

func (*Payload_GetChatAvatar) isPayload_Command() {}

func (*Payload_GetContact_) isPayload_Command() {}

func (*Payload_GetContactList) isPayload_Command() {}

func (*Payload_GetMessagesAfter) isPayload_Command() {}

func (*Payload_PreStartupSync) isPayload_Command() {}

func (*Payload_ResolveIdentifier) isPayload_Command() {}

func (*Payload_PrepareDM) isPayload_Command() {}

func (*Payload_Ping) isPayload_Command() {}

func (*Payload_Pong) isPayload_Command() {}

func (*Payload_Messages) isPayload_Command() {}

func (*Payload_GetRecentMessages) isPayload_Command() {}

func (*Payload_ChatList) isPayload_Command() {}

func (*Payload_Attachment) isPayload_Command() {}

func (*Payload_SendResponse) isPayload_Command() {}

func (*Payload_SyncHookResponse) isPayload_Command() {}

func (*Payload_ResolveIdentifierResponse) isPayload_Command() {}

func (*Payload_Null) isPayload_Command() {}

func (*Payload_GUID) isPayload_Command() {}

func (*Payload_HistoryQuery) isPayload_Command() {}

var File_ipc_v1_v1_proto protoreflect.FileDescriptor

var file_ipc_v1_v1_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x69, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x54, 0x0a, 0x04, 0x47, 0x55, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x22, 0x37, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x55, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x47, 0x55, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x50, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x72,
	0x74, 0x22, 0x43, 0x0a, 0x07, 0x54, 0x61, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x54, 0x61, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x47, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x47, 0x55, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1e,
	0x0a, 0x0a, 0x50, 0x61, 0x74, 0x68, 0x4f, 0x6e, 0x44, 0x69, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x50, 0x61, 0x74, 0x68, 0x4f, 0x6e, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x1a,
	0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x4d, 0x69,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08,
	0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x47, 0x55, 0x49, 0x44, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x49, 0x0a, 0x13, 0x52, 0x69, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x14, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x41, 0x0a, 0x11,
	0x52, 0x69, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22,
	0xb1, 0x02, 0x0a, 0x0d, 0x52, 0x69, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x12, 0x1f, 0x0a, 0x08, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x31, 0x0a, 0x11, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x11, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x65,
	0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x52, 0x69, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x6b,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x02, 0x52, 0x06, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x0b, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x52, 0x4c, 0x88, 0x01, 0x01, 0x12,
	0x2b, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x52, 0x69, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x69, 0x7a,
	0x65, 0x48, 0x04, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x65, 0x78, 0x74, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x52, 0x4c, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0xc4, 0x01, 0x0a, 0x12, 0x52, 0x69, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x6b,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x61,
	0x73, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x48, 0x61,
	0x73, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x23, 0x0a, 0x0a, 0x59, 0x6f, 0x75, 0x54, 0x75, 0x62,
	0x65, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x59, 0x6f,
	0x75, 0x54, 0x75, 0x62, 0x65, 0x55, 0x52, 0x4c, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x55, 0x52,
	0x4c, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x05, 0x41, 0x73, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x52, 0x69, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x52, 0x05, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x59,
	0x6f, 0x75, 0x54, 0x75, 0x62, 0x65, 0x55, 0x52, 0x4c, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x55, 0x52, 0x4c, 0x22, 0xdd, 0x07, 0x0a, 0x08, 0x52,
	0x69, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x25, 0x0a, 0x0b, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x52, 0x4c, 0x88, 0x01, 0x01, 0x12, 0x15,
	0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x03, 0x55,
	0x52, 0x4c, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1d, 0x0a, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x27, 0x0a, 0x0c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x54, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x53, 0x69, 0x74, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x08, 0x53, 0x69,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x55, 0x52, 0x4c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52,
	0x0a, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x55, 0x52, 0x4c, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x07, 0x52, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x08, 0x49, 0x74, 0x65,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x52, 0x69, 0x63, 0x68, 0x4c, 0x69, 0x6e,
	0x6b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x0b, 0x52, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x29, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x52, 0x69, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x48, 0x0c, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x05,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x52, 0x69,
	0x63, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x48, 0x0d, 0x52, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x05,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x52, 0x69,
	0x63, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x0e, 0x52, 0x05, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x06, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x52, 0x69, 0x63, 0x68, 0x4c, 0x69,
	0x6e, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x26, 0x0a, 0x06, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x52, 0x69, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52,
	0x06, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x12, 0x38, 0x0a, 0x0f, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x52, 0x69, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x52, 0x0f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x73, 0x12, 0x26, 0x0a, 0x06, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x52, 0x69, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x52, 0x06, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x52, 0x4c, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x55, 0x52,
	0x4c, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x53, 0x69, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x55, 0x52, 0x4c, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x42, 0x19, 0x0a, 0x17, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x61, 0x63, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x19, 0x0a, 0x17, 0x5f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x49, 0x63, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x22, 0x2f, 0x0a, 0x05, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x12, 0x26, 0x0a, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x07,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x0a, 0x07, 0x6d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x1a, 0x4a, 0x0a, 0x0c, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xe4, 0x03, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x18, 0x0a, 0x06, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x48, 0x00, 0x52, 0x06, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x46, 0x6c,
	0x6f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x05, 0x46, 0x6c, 0x6f,
	0x61, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x05, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x05, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x12, 0x18, 0x0a, 0x06, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x00, 0x52, 0x06, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x18, 0x0a, 0x06,
	0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x06,
	0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x06, 0x53, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x11, 0x48, 0x00, 0x52, 0x06, 0x53, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x12, 0x18, 0x0a, 0x06, 0x53, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x09, 0x20, 0x01, 0x28, 0x12,
	0x48, 0x00, 0x52, 0x06, 0x53, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x1a, 0x0a, 0x07, 0x46, 0x69,
	0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x07, 0x48, 0x00, 0x52, 0x07, 0x46,
	0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x1a, 0x0a, 0x07, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36,
	0x34, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x06, 0x48, 0x00, 0x52, 0x07, 0x46, 0x69, 0x78, 0x65, 0x64,
	0x36, 0x34, 0x12, 0x1c, 0x0a, 0x08, 0x53, 0x46, 0x49, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0f, 0x48, 0x00, 0x52, 0x08, 0x53, 0x46, 0x49, 0x78, 0x65, 0x64, 0x33, 0x32,
	0x12, 0x1c, 0x0a, 0x08, 0x53, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x10, 0x48, 0x00, 0x52, 0x08, 0x53, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x14,
	0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04,
	0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x05, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x05,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x48, 0x00, 0x52, 0x05, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x24, 0x0a, 0x07,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x42, 0x07, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x58, 0x0a, 0x0c, 0x43,
	0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x43, 0x68, 0x61, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x43, 0x68, 0x61, 0x74, 0x22, 0x38, 0x0a, 0x08, 0x54, 0x65, 0x78, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22,
	0x3d, 0x0a, 0x0e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x2b, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x24,
	0x0a, 0x0a, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x54, 0x79,
	0x70, 0x69, 0x6e, 0x67, 0x22, 0x9c, 0x01, 0x0a, 0x0a, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x25, 0x0a, 0x08, 0x52, 0x69, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x69, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x08, 0x52, 0x69, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x2d, 0x0a, 0x0b, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0c, 0x46, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0c, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x88,
	0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54,
	0x65, 0x78, 0x74, 0x22, 0x3a, 0x0a, 0x13, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22,
	0x7f, 0x0a, 0x15, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x28, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x4e, 0x65, 0x77, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x88,
	0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x4e, 0x65, 0x77, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x22, 0x9f, 0x01, 0x0a, 0x1a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x28, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x06, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74,
	0x6f, 0x72, 0x22, 0x31, 0x0a, 0x0b, 0x54, 0x61, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x22, 0x0a, 0x07, 0x54, 0x61, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x54, 0x61, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x07, 0x54, 0x61,
	0x70, 0x62, 0x61, 0x63, 0x6b, 0x22, 0x59, 0x0a, 0x0b, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x44, 0x65, 0x62, 0x75, 0x67, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x44, 0x65, 0x62, 0x75, 0x67, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xf6, 0x03, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x55, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x47, 0x55, 0x49, 0x44, 0x12, 0x1f, 0x0a,
	0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x54, 0x65,
	0x78, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x31,
	0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x25, 0x0a, 0x06, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00,
	0x52, 0x06, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x0a, 0x06, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x06, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12,
	0x40, 0x0a, 0x0f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00,
	0x52, 0x0f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x46, 0x0a, 0x11, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x11, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x55, 0x0a, 0x16, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x16, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x28, 0x0a, 0x07, 0x54, 0x61, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x20, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x61, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x48,
	0x00, 0x52, 0x07, 0x54, 0x61, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x07, 0x50, 0x68,
	0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x50, 0x68,
	0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x07, 0x50, 0x68, 0x61,
	0x6e, 0x74, 0x6f, 0x6d, 0x42, 0x03, 0x0a, 0x01, 0x5f, 0x22, 0xc7, 0x05, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x47, 0x55, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x04, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x08, 0x43, 0x68, 0x61,
	0x74, 0x47, 0x55, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x47, 0x55,
	0x49, 0x44, 0x52, 0x08, 0x43, 0x68, 0x61, 0x74, 0x47, 0x55, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x06,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x47,
	0x55, 0x49, 0x44, 0x48, 0x00, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x49, 0x73, 0x52, 0x65, 0x61, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73,
	0x52, 0x65, 0x61, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x64, 0x41, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x48, 0x01, 0x52, 0x06, 0x52, 0x65, 0x61, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a,
	0x0b, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x49, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x49, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x73, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x49, 0x73, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x37, 0x0a, 0x0c, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x48, 0x02, 0x52, 0x0c, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x0b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x37, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x48, 0x04, 0x52, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x0c, 0x43, 0x6f, 0x72, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x05, 0x52,
	0x0c, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x52, 0x65, 0x61, 0x64, 0x41, 0x74, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x42, 0x12,
	0x0a, 0x10, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0xa0, 0x02, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x12, 0x2a, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x55, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x47, 0x55, 0x49, 0x44, 0x48, 0x00,
	0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x55, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12,
	0x1a, 0x0a, 0x08, 0x49, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x49, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x12, 0x21, 0x0a, 0x08, 0x43,
	0x68, 0x61, 0x74, 0x47, 0x55, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x47, 0x55, 0x49, 0x44, 0x52, 0x08, 0x43, 0x68, 0x61, 0x74, 0x47, 0x55, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x52, 0x65, 0x61, 0x64, 0x55, 0x70, 0x54, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x52, 0x65, 0x61, 0x64, 0x55, 0x70, 0x54, 0x6f, 0x12, 0x32, 0x0a, 0x06, 0x52, 0x65,
	0x61, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x52, 0x65, 0x61, 0x64, 0x41, 0x74, 0x12, 0x36,
	0x0a, 0x0c, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x48, 0x01, 0x52, 0x0c, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x47, 0x55, 0x49, 0x44, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x12, 0x54, 0x79, 0x70, 0x69, 0x6e,
	0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a,
	0x08, 0x43, 0x68, 0x61, 0x74, 0x47, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x05, 0x2e, 0x47, 0x55, 0x49, 0x44, 0x52, 0x08, 0x43, 0x68, 0x61, 0x74, 0x47, 0x55, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x36, 0x0a, 0x0c, 0x43, 0x6f, 0x72, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52,
	0x0c, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0xa9, 0x03, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x21, 0x0a,
	0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1f, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x03, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x16, 0x0a, 0x06, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x26, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x47, 0x55, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x47, 0x55, 0x49, 0x44, 0x48, 0x04, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x55, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x11, 0x50, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x11, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x43, 0x6f,
	0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x06, 0x52, 0x0d, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x55, 0x49, 0x44, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xed, 0x01,
	0x0a, 0x08, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x04, 0x47, 0x55,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x47, 0x55, 0x49, 0x44, 0x52,
	0x04, 0x47, 0x55, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x0c, 0x4e, 0x6f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x0c,
	0x4e, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12,
	0x29, 0x0a, 0x0d, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0d, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x44,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x4e,
	0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x6c, 0x0a,
	0x0c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x47, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x47, 0x55, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xf2, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x55, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x47, 0x55, 0x49, 0x44, 0x12, 0x21, 0x0a, 0x08,
	0x43, 0x68, 0x61, 0x74, 0x47, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05,
	0x2e, 0x47, 0x55, 0x49, 0x44, 0x52, 0x08, 0x43, 0x68, 0x61, 0x74, 0x47, 0x55, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x21, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x0c, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6f, 0x72,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x01, 0x52, 0x0c, 0x43, 0x6f, 0x72,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x43, 0x6f, 0x72, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x35, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x75, 0x70, 0x53, 0x79, 0x6e, 0x63, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x6b, 0x69, 0x70, 0x53, 0x79, 0x6e, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x53, 0x6b, 0x69, 0x70, 0x53, 0x79, 0x6e, 0x63, 0x22, 0x65,
	0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2a, 0x0a, 0x08,
	0x52, 0x69, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x52, 0x69, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x48, 0x00, 0x52, 0x08, 0x52, 0x69, 0x63,
	0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x52, 0x69, 0x63,
	0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x82, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x73, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x49, 0x73, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x65, 0x0a, 0x19, 0x53, 0x65,
	0x6e, 0x64, 0x54, 0x61, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12,
	0x20, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x54, 0x61, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xb2, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x50, 0x61, 0x72, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x05, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x36, 0x0a, 0x07, 0x54, 0x61, 0x70, 0x62, 0x61, 0x63,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x61,
	0x70, 0x62, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x54, 0x61, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x06,
	0x0a, 0x04, 0x50, 0x61, 0x72, 0x74, 0x22, 0xde, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x08, 0x43, 0x68, 0x61, 0x74, 0x47, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x05, 0x2e, 0x47, 0x55, 0x49, 0x44, 0x52, 0x08, 0x43, 0x68, 0x61, 0x74, 0x47, 0x55, 0x49, 0x44,
	0x12, 0x35, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x48, 0x01, 0x52, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x88,
	0x01, 0x01, 0x12, 0x26, 0x0a, 0x05, 0x50, 0x61, 0x72, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x52, 0x05, 0x50, 0x61, 0x72, 0x74, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x57, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x74, 0x47, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x47, 0x55, 0x49, 0x44, 0x52, 0x08, 0x43, 0x68, 0x61, 0x74,
	0x47, 0x55, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x64, 0x55, 0x70, 0x54, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x61, 0x64, 0x55, 0x70, 0x54, 0x6f,
	0x22, 0x4d, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x74, 0x47, 0x55, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x47, 0x55, 0x49, 0x44, 0x52, 0x08, 0x43,
	0x68, 0x61, 0x74, 0x47, 0x55, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x79, 0x70, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x22,
	0x33, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x74, 0x47, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x47, 0x55, 0x49, 0x44, 0x52, 0x08, 0x43, 0x68, 0x61, 0x74,
	0x47, 0x55, 0x49, 0x44, 0x22, 0x39, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x08,
	0x43, 0x68, 0x61, 0x74, 0x47, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05,
	0x2e, 0x47, 0x55, 0x49, 0x44, 0x52, 0x08, 0x43, 0x68, 0x61, 0x74, 0x47, 0x55, 0x49, 0x44, 0x22,
	0x51, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x4d, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x4d, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0x33, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x53, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x74, 0x47, 0x55, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x47, 0x55, 0x49, 0x44, 0x52, 0x08, 0x43, 0x68,
	0x61, 0x74, 0x47, 0x55, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x8c, 0x01, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x74,
	0x47, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x47, 0x55, 0x49,
	0x44, 0x52, 0x08, 0x43, 0x68, 0x61, 0x74, 0x47, 0x55, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x3a, 0x0a, 0x18, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x36, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x47, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x47, 0x55, 0x49, 0x44, 0x52, 0x04, 0x47, 0x55, 0x49, 0x44, 0x22,
	0x2d, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x44, 0x4d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x47, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x47, 0x55, 0x49, 0x44, 0x52, 0x04, 0x47, 0x55, 0x49, 0x44, 0x22, 0x77,
	0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x12, 0x24, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x80, 0x03, 0x0a, 0x0c, 0x42, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x54, 0x4c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x19, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x08, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0a, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x21, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x48, 0x05, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x49, 0x44, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x33, 0x0a, 0x0b, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x22,
	0x58, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x08, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x29, 0x0a, 0x0a, 0x43, 0x68, 0x61,
	0x74, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x47, 0x55, 0x49, 0x44, 0x52, 0x05, 0x63,
	0x68, 0x61, 0x74, 0x73, 0x22, 0x06, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x22, 0x06, 0x0a, 0x04,
	0x50, 0x6f, 0x6e, 0x67, 0x22, 0xd8, 0x02, 0x0a, 0x0c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x74, 0x47, 0x55, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x47, 0x55, 0x49, 0x44, 0x52, 0x08,
	0x43, 0x68, 0x61, 0x74, 0x47, 0x55, 0x49, 0x44, 0x12, 0x3f, 0x0a, 0x0a, 0x62, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x09, 0x61, 0x66, 0x74,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x09, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x62, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x47, 0x55, 0x49, 0x44, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a,
	0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x47, 0x55, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a,
	0x09, 0x61, 0x66, 0x74, 0x65, 0x72, 0x47, 0x55, 0x49, 0x44, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x09, 0x61, 0x66, 0x74, 0x65, 0x72, 0x47, 0x55, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x62, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x47, 0x55, 0x49, 0x44, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x47, 0x55, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x8a, 0x0e, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x49,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x30, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x12, 0x45, 0x0a, 0x12, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x12, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x04, 0x43, 0x68,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x43, 0x68, 0x61, 0x74, 0x12, 0x33, 0x0a, 0x0c, 0x42,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x48, 0x00, 0x52, 0x0c, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x24, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x42, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x03, 0x4c, 0x6f,
	0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x6e,
	0x65, 0x48, 0x00, 0x52, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x2a, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x03, 0x41, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x03, 0x41, 0x63, 0x6b, 0x12, 0x37, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x43, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x31, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x69, 0x6e, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09,
	0x53, 0x65, 0x74, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x08, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x12, 0x3d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x34, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x28, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a,
	0x0e, 0x50, 0x72, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x53, 0x79, 0x6e, 0x63, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0e, 0x50, 0x72, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x75, 0x70, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x49, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x11, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x31, 0x0a, 0x09, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x44, 0x4d, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x44,
	0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x50, 0x72, 0x65, 0x70,
	0x61, 0x72, 0x65, 0x44, 0x4d, 0x12, 0x1b, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x50, 0x69,
	0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x04, 0x50, 0x6f, 0x6e, 0x67, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x50, 0x6f, 0x6e, 0x67, 0x12,
	0x2a, 0x0a, 0x08, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x08, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49,
	0x44, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2d, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x33, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63, 0x48, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x53, 0x79, 0x6e, 0x63, 0x48, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x10, 0x53, 0x79, 0x6e,
	0x63, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a,
	0x19, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x19,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x4e, 0x75, 0x6c,
	0x6c, 0x18, 0x23, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x4e, 0x75, 0x6c, 0x6c, 0x12,
	0x1b, 0x0a, 0x04, 0x47, 0x55, 0x49, 0x44, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x47, 0x55, 0x49, 0x44, 0x48, 0x00, 0x52, 0x04, 0x47, 0x55, 0x49, 0x44, 0x12, 0x33, 0x0a, 0x0c,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x25, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x48, 0x00, 0x52, 0x0c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x42, 0x09, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2a, 0xb5, 0x02, 0x0a,
	0x0b, 0x54, 0x61, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e,
	0x54, 0x61, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x10, 0x00,
	0x12, 0x10, 0x0a, 0x0b, 0x54, 0x61, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x4c, 0x6f, 0x76, 0x65, 0x10,
	0xd0, 0x0f, 0x12, 0x10, 0x0a, 0x0b, 0x54, 0x61, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x6b,
	0x65, 0x10, 0xd1, 0x0f, 0x12, 0x13, 0x0a, 0x0e, 0x54, 0x61, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x44,
	0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x10, 0xd2, 0x0f, 0x12, 0x11, 0x0a, 0x0c, 0x54, 0x61, 0x70,
	0x62, 0x61, 0x63, 0x6b, 0x4c, 0x61, 0x75, 0x67, 0x68, 0x10, 0xd3, 0x0f, 0x12, 0x14, 0x0a, 0x0f,
	0x54, 0x61, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x45, 0x6d, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x10,
	0xd4, 0x0f, 0x12, 0x14, 0x0a, 0x0f, 0x54, 0x61, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xd5, 0x0f, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x61, 0x70, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x10, 0xb8, 0x17,
	0x12, 0x16, 0x0a, 0x11, 0x54, 0x61, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4c, 0x69, 0x6b, 0x65, 0x10, 0xb9, 0x17, 0x12, 0x19, 0x0a, 0x14, 0x54, 0x61, 0x70, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65,
	0x10, 0xba, 0x17, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x61, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x61, 0x75, 0x67, 0x68, 0x10, 0xbb, 0x17, 0x12, 0x1a, 0x0a, 0x15,
	0x54, 0x61, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x6d, 0x70,
	0x68, 0x61, 0x73, 0x69, 0x73, 0x10, 0xbc, 0x17, 0x12, 0x1a, 0x0a, 0x15, 0x54, 0x61, 0x70, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x10, 0xbd, 0x17, 0x2a, 0x6c, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x13, 0x0a, 0x0f, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x74, 0x65,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x49,
	0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x10, 0x04, 0x12,
	0x11, 0x0a, 0x0d, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x10, 0x05, 0x2a, 0x3c, 0x0a, 0x0f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x10, 0x01,
	0x32, 0x3c, 0x0a, 0x09, 0x42, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x6f, 0x6e, 0x61, 0x12, 0x2f, 0x0a,
	0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x0d, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0c,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x32, 0x08,
	0x0a, 0x06, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x42, 0x1e, 0x5a, 0x17, 0x6d, 0x61, 0x75, 0x74,
	0x72, 0x69, 0x78, 0x2d, 0x6e, 0x6f, 0x73, 0x69, 0x70, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0xba, 0x02, 0x02, 0x50, 0x42, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ipc_v1_v1_proto_rawDescOnce sync.Once
	file_ipc_v1_v1_proto_rawDescData = file_ipc_v1_v1_proto_rawDesc
)

func file_ipc_v1_v1_proto_rawDescGZIP() []byte {
	file_ipc_v1_v1_proto_rawDescOnce.Do(func() {
		file_ipc_v1_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_ipc_v1_v1_proto_rawDescData)
	})
	return file_ipc_v1_v1_proto_rawDescData
}

var file_ipc_v1_v1_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_ipc_v1_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 58)
var file_ipc_v1_v1_proto_goTypes = []interface{}{
	(TapbackType)(0),                   // 0: TapbackType
	(ItemType)(0),                      // 1: ItemType
	(GroupActionType)(0),               // 2: GroupActionType
	(*GUID)(nil),                       // 3: GUID
	(*MessageTarget)(nil),              // 4: MessageTarget
	(*Tapback)(nil),                    // 5: Tapback
	(*Attachment)(nil),                 // 6: Attachment
	(*RichLinkAssetSource)(nil),        // 7: RichLinkAssetSource
	(*RichLinkAssetSize)(nil),          // 8: RichLinkAssetSize
	(*RichLinkAsset)(nil),              // 9: RichLinkAsset
	(*RichLinkVideoAsset)(nil),         // 10: RichLinkVideoAsset
	(*RichLink)(nil),                   // 11: RichLink
	(*Array)(nil),                      // 12: Array
	(*Mapping)(nil),                    // 13: Mapping
	(*MetadataValue)(nil),              // 14: MetadataValue
	(*Correlations)(nil),               // 15: Correlations
	(*TextItem)(nil),                   // 16: TextItem
	(*AttachmentItem)(nil),             // 17: AttachmentItem
	(*TypingItem)(nil),                 // 18: TypingItem
	(*PluginItem)(nil),                 // 19: PluginItem
	(*GroupNameChangeItem)(nil),        // 20: GroupNameChangeItem
	(*GroupAvatarChangeItem)(nil),      // 21: GroupAvatarChangeItem
	(*GroupParticipantChangeItem)(nil), // 22: GroupParticipantChangeItem
	(*TapbackItem)(nil),                // 23: TapbackItem
	(*PhantomItem)(nil),                // 24: PhantomItem
	(*Item)(nil),                       // 25: Item
	(*Message)(nil),                    // 26: Message
	(*ReadReceipt)(nil),                // 27: ReadReceipt
	(*TypingNotification)(nil),         // 28: TypingNotification
	(*Contact)(nil),                    // 29: Contact
	(*ChatInfo)(nil),                   // 30: ChatInfo
	(*SendResponse)(nil),               // 31: SendResponse
	(*Error)(nil),                      // 32: Error
	(*SendMessageStatus)(nil),          // 33: SendMessageStatus
	(*StartupSyncHookResponse)(nil),    // 34: StartupSyncHookResponse
	(*SendTextMessageRequest)(nil),     // 35: SendTextMessageRequest
	(*SendMediaMessageRequest)(nil),    // 36: SendMediaMessageRequest
	(*SendTapbackMessageRequest)(nil),  // 37: SendTapbackMessageRequest
	(*SendMessagePart)(nil),            // 38: SendMessagePart
	(*SendMessageRequest)(nil),         // 39: SendMessageRequest
	(*SendReadReceiptRequest)(nil),     // 40: SendReadReceiptRequest
	(*SetTypingRequest)(nil),           // 41: SetTypingRequest
	(*GetChatRequest)(nil),             // 42: GetChatRequest
	(*GetChatAvatarRequest)(nil),       // 43: GetChatAvatarRequest
	(*GetChatsRequest)(nil),            // 44: GetChatsRequest
	(*GetContactRequest)(nil),          // 45: GetContactRequest
	(*GetRecentMessagesRequest)(nil),   // 46: GetRecentMessagesRequest
	(*GetMessagesAfterRequest)(nil),    // 47: GetMessagesAfterRequest
	(*ResolveIdentifierRequest)(nil),   // 48: ResolveIdentifierRequest
	(*ResolveIdentifierResponse)(nil),  // 49: ResolveIdentifierResponse
	(*PrepareDMRequest)(nil),           // 50: PrepareDMRequest
	(*LogLine)(nil),                    // 51: LogLine
	(*BridgeStatus)(nil),               // 52: BridgeStatus
	(*ContactList)(nil),                // 53: ContactList
	(*MessageList)(nil),                // 54: MessageList
	(*ChatIDList)(nil),                 // 55: ChatIDList
	(*Ping)(nil),                       // 56: Ping
	(*Pong)(nil),                       // 57: Pong
	(*HistoryQuery)(nil),               // 58: HistoryQuery
	(*Payload)(nil),                    // 59: Payload
	nil,                                // 60: Mapping.MappingEntry
	(*timestamppb.Timestamp)(nil),      // 61: google.protobuf.Timestamp
}
var file_ipc_v1_v1_proto_depIdxs = []int32{
	0,   // 0: Tapback.Type:type_name -> TapbackType
	7,   // 1: RichLinkAsset.Source:type_name -> RichLinkAssetSource
	8,   // 2: RichLinkAsset.Size:type_name -> RichLinkAssetSize
	9,   // 3: RichLinkVideoAsset.Asset:type_name -> RichLinkAsset
	9,   // 4: RichLink.Icon:type_name -> RichLinkAsset
	9,   // 5: RichLink.Image:type_name -> RichLinkAsset
	10,  // 6: RichLink.Video:type_name -> RichLinkVideoAsset
	9,   // 7: RichLink.Audio:type_name -> RichLinkAsset
	9,   // 8: RichLink.Images:type_name -> RichLinkAsset
	9,   // 9: RichLink.Videos:type_name -> RichLinkAsset
	9,   // 10: RichLink.StreamingVideos:type_name -> RichLinkAsset
	9,   // 11: RichLink.Audios:type_name -> RichLinkAsset
	14,  // 12: Array.Values:type_name -> MetadataValue
	60,  // 13: Mapping.mapping:type_name -> Mapping.MappingEntry
	12,  // 14: MetadataValue.Array:type_name -> Array
	13,  // 15: MetadataValue.Mapping:type_name -> Mapping
	6,   // 16: AttachmentItem.Attachment:type_name -> Attachment
	11,  // 17: PluginItem.RichLink:type_name -> RichLink
	6,   // 18: PluginItem.Attachments:type_name -> Attachment
	2,   // 19: GroupAvatarChangeItem.Action:type_name -> GroupActionType
	6,   // 20: GroupAvatarChangeItem.NewAvatar:type_name -> Attachment
	2,   // 21: GroupParticipantChangeItem.Action:type_name -> GroupActionType
	5,   // 22: TapbackItem.Tapback:type_name -> Tapback
	16,  // 23: Item.Text:type_name -> TextItem
	17,  // 24: Item.Attachment:type_name -> AttachmentItem
	18,  // 25: Item.Typing:type_name -> TypingItem
	19,  // 26: Item.Plugin:type_name -> PluginItem
	20,  // 27: Item.GroupNameChange:type_name -> GroupNameChangeItem
	21,  // 28: Item.GroupAvatarChange:type_name -> GroupAvatarChangeItem
	22,  // 29: Item.GroupParticipantChange:type_name -> GroupParticipantChangeItem
	23,  // 30: Item.Tapback:type_name -> TapbackItem
	24,  // 31: Item.Phantom:type_name -> PhantomItem
	61,  // 32: Message.Time:type_name -> google.protobuf.Timestamp
	3,   // 33: Message.ChatGUID:type_name -> GUID
	3,   // 34: Message.Sender:type_name -> GUID
	61,  // 35: Message.ReadAt:type_name -> google.protobuf.Timestamp
	4,   // 36: Message.ThreadTarget:type_name -> MessageTarget
	13,  // 37: Message.MessageMetadata:type_name -> Mapping
	15,  // 38: Message.Correlations:type_name -> Correlations
	25,  // 39: Message.Items:type_name -> Item
	3,   // 40: ReadReceipt.SenderGUID:type_name -> GUID
	3,   // 41: ReadReceipt.ChatGUID:type_name -> GUID
	61,  // 42: ReadReceipt.ReadAt:type_name -> google.protobuf.Timestamp
	15,  // 43: ReadReceipt.Correlations:type_name -> Correlations
	3,   // 44: TypingNotification.ChatGUID:type_name -> GUID
	15,  // 45: TypingNotification.Correlations:type_name -> Correlations
	3,   // 46: Contact.UserGUID:type_name -> GUID
	3,   // 47: ChatInfo.GUID:type_name -> GUID
	61,  // 48: SendResponse.Time:type_name -> google.protobuf.Timestamp
	3,   // 49: SendMessageStatus.ChatGUID:type_name -> GUID
	32,  // 50: SendMessageStatus.Error:type_name -> Error
	15,  // 51: SendMessageStatus.Correlations:type_name -> Correlations
	11,  // 52: SendTextMessageRequest.RichLink:type_name -> RichLink
	6,   // 53: SendMediaMessageRequest.Attachment:type_name -> Attachment
	4,   // 54: SendTapbackMessageRequest.Target:type_name -> MessageTarget
	0,   // 55: SendTapbackMessageRequest.Type:type_name -> TapbackType
	35,  // 56: SendMessagePart.Text:type_name -> SendTextMessageRequest
	36,  // 57: SendMessagePart.Media:type_name -> SendMediaMessageRequest
	37,  // 58: SendMessagePart.Tapback:type_name -> SendTapbackMessageRequest
	3,   // 59: SendMessageRequest.ChatGUID:type_name -> GUID
	4,   // 60: SendMessageRequest.ReplyTarget:type_name -> MessageTarget
	13,  // 61: SendMessageRequest.Metadata:type_name -> Mapping
	38,  // 62: SendMessageRequest.Parts:type_name -> SendMessagePart
	3,   // 63: SendReadReceiptRequest.ChatGUID:type_name -> GUID
	3,   // 64: SetTypingRequest.ChatGUID:type_name -> GUID
	3,   // 65: GetChatRequest.ChatGUID:type_name -> GUID
	3,   // 66: GetChatAvatarRequest.ChatGUID:type_name -> GUID
	61,  // 67: GetChatsRequest.MinTimestamp:type_name -> google.protobuf.Timestamp
	3,   // 68: GetRecentMessagesRequest.ChatGUID:type_name -> GUID
	3,   // 69: GetMessagesAfterRequest.ChatGUID:type_name -> GUID
	61,  // 70: GetMessagesAfterRequest.Timestamp:type_name -> google.protobuf.Timestamp
	3,   // 71: ResolveIdentifierResponse.GUID:type_name -> GUID
	3,   // 72: PrepareDMRequest.GUID:type_name -> GUID
	13,  // 73: LogLine.Metadata:type_name -> Mapping
	13,  // 74: BridgeStatus.Info:type_name -> Mapping
	29,  // 75: ContactList.Contacts:type_name -> Contact
	26,  // 76: MessageList.Messages:type_name -> Message
	3,   // 77: ChatIDList.chats:type_name -> GUID
	3,   // 78: HistoryQuery.ChatGUID:type_name -> GUID
	61,  // 79: HistoryQuery.beforeDate:type_name -> google.protobuf.Timestamp
	61,  // 80: HistoryQuery.afterDate:type_name -> google.protobuf.Timestamp
	26,  // 81: Payload.Message:type_name -> Message
	27,  // 82: Payload.ReadReceipt:type_name -> ReadReceipt
	28,  // 83: Payload.TypingNotification:type_name -> TypingNotification
	30,  // 84: Payload.Chat:type_name -> ChatInfo
	52,  // 85: Payload.BridgeStatus:type_name -> BridgeStatus
	29,  // 86: Payload.Contact:type_name -> Contact
	33,  // 87: Payload.SendMessageStatus:type_name -> SendMessageStatus
	51,  // 88: Payload.Log:type_name -> LogLine
	53,  // 89: Payload.Contacts:type_name -> ContactList
	32,  // 90: Payload.Error:type_name -> Error
	39,  // 91: Payload.SendMessage:type_name -> SendMessageRequest
	40,  // 92: Payload.SendReadReceipt:type_name -> SendReadReceiptRequest
	41,  // 93: Payload.SetTyping:type_name -> SetTypingRequest
	44,  // 94: Payload.GetChats:type_name -> GetChatsRequest
	42,  // 95: Payload.GetChat:type_name -> GetChatRequest
	43,  // 96: Payload.GetChatAvatar:type_name -> GetChatAvatarRequest
	45,  // 97: Payload.GetContact:type_name -> GetContactRequest
	47,  // 98: Payload.GetMessagesAfter:type_name -> GetMessagesAfterRequest
	48,  // 99: Payload.ResolveIdentifier:type_name -> ResolveIdentifierRequest
	50,  // 100: Payload.PrepareDM:type_name -> PrepareDMRequest
	56,  // 101: Payload.Ping:type_name -> Ping
	57,  // 102: Payload.Pong:type_name -> Pong
	54,  // 103: Payload.Messages:type_name -> MessageList
	46,  // 104: Payload.GetRecentMessages:type_name -> GetRecentMessagesRequest
	55,  // 105: Payload.ChatList:type_name -> ChatIDList
	6,   // 106: Payload.Attachment:type_name -> Attachment
	31,  // 107: Payload.SendResponse:type_name -> SendResponse
	34,  // 108: Payload.SyncHookResponse:type_name -> StartupSyncHookResponse
	49,  // 109: Payload.ResolveIdentifierResponse:type_name -> ResolveIdentifierResponse
	3,   // 110: Payload.GUID:type_name -> GUID
	58,  // 111: Payload.HistoryQuery:type_name -> HistoryQuery
	14,  // 112: Mapping.MappingEntry.value:type_name -> MetadataValue
	58,  // 113: Barcelona.RequestHistory:input_type -> HistoryQuery
	54,  // 114: Barcelona.RequestHistory:output_type -> MessageList
	114, // [114:115] is the sub-list for method output_type
	113, // [113:114] is the sub-list for method input_type
	113, // [113:113] is the sub-list for extension type_name
	113, // [113:113] is the sub-list for extension extendee
	0,   // [0:113] is the sub-list for field type_name
}

func init() { file_ipc_v1_v1_proto_init() }
func file_ipc_v1_v1_proto_init() {
	if File_ipc_v1_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ipc_v1_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GUID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tapback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RichLinkAssetSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RichLinkAssetSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RichLinkAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RichLinkVideoAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RichLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Array); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Correlations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachmentItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypingItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupNameChangeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupAvatarChangeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupParticipantChangeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TapbackItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhantomItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypingNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartupSyncHookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTextMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMediaMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTapbackMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessagePart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendReadReceiptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTypingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecentMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessagesAfterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveIdentifierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveIdentifierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareDMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatIDList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipc_v1_v1_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ipc_v1_v1_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_ipc_v1_v1_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*RichLinkAssetSource_URL)(nil),
		(*RichLinkAssetSource_Data)(nil),
	}
	file_ipc_v1_v1_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_ipc_v1_v1_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_ipc_v1_v1_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_ipc_v1_v1_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*MetadataValue_String_)(nil),
		(*MetadataValue_Double)(nil),
		(*MetadataValue_Float)(nil),
		(*MetadataValue_Int32)(nil),
		(*MetadataValue_Int64)(nil),
		(*MetadataValue_UInt32)(nil),
		(*MetadataValue_UInt64)(nil),
		(*MetadataValue_SInt32)(nil),
		(*MetadataValue_SInt64)(nil),
		(*MetadataValue_Fixed32)(nil),
		(*MetadataValue_Fixed64)(nil),
		(*MetadataValue_SFIxed32)(nil),
		(*MetadataValue_SFixed64)(nil),
		(*MetadataValue_Bool)(nil),
		(*MetadataValue_Bytes)(nil),
		(*MetadataValue_Array)(nil),
		(*MetadataValue_Mapping)(nil),
	}
	file_ipc_v1_v1_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_ipc_v1_v1_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_ipc_v1_v1_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_ipc_v1_v1_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_ipc_v1_v1_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_ipc_v1_v1_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*Item_Text)(nil),
		(*Item_Attachment)(nil),
		(*Item_Typing)(nil),
		(*Item_Plugin)(nil),
		(*Item_GroupNameChange)(nil),
		(*Item_GroupAvatarChange)(nil),
		(*Item_GroupParticipantChange)(nil),
		(*Item_Tapback)(nil),
		(*Item_Phantom)(nil),
	}
	file_ipc_v1_v1_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_ipc_v1_v1_proto_msgTypes[24].OneofWrappers = []interface{}{}
	file_ipc_v1_v1_proto_msgTypes[25].OneofWrappers = []interface{}{}
	file_ipc_v1_v1_proto_msgTypes[26].OneofWrappers = []interface{}{}
	file_ipc_v1_v1_proto_msgTypes[27].OneofWrappers = []interface{}{}
	file_ipc_v1_v1_proto_msgTypes[30].OneofWrappers = []interface{}{}
	file_ipc_v1_v1_proto_msgTypes[32].OneofWrappers = []interface{}{}
	file_ipc_v1_v1_proto_msgTypes[35].OneofWrappers = []interface{}{
		(*SendMessagePart_Text)(nil),
		(*SendMessagePart_Media)(nil),
		(*SendMessagePart_Tapback)(nil),
	}
	file_ipc_v1_v1_proto_msgTypes[36].OneofWrappers = []interface{}{}
	file_ipc_v1_v1_proto_msgTypes[49].OneofWrappers = []interface{}{}
	file_ipc_v1_v1_proto_msgTypes[51].OneofWrappers = []interface{}{}
	file_ipc_v1_v1_proto_msgTypes[55].OneofWrappers = []interface{}{}
	file_ipc_v1_v1_proto_msgTypes[56].OneofWrappers = []interface{}{
		(*Payload_Message)(nil),
		(*Payload_ReadReceipt)(nil),
		(*Payload_TypingNotification)(nil),
		(*Payload_Chat)(nil),
		(*Payload_BridgeStatus)(nil),
		(*Payload_Contact)(nil),
		(*Payload_SendMessageStatus)(nil),
		(*Payload_Log)(nil),
		(*Payload_Contacts)(nil),
		(*Payload_Error)(nil),
		(*Payload_Ack)(nil),
		(*Payload_SendMessage)(nil),
		(*Payload_SendReadReceipt)(nil),
		(*Payload_SetTyping)(nil),
		(*Payload_GetChats)(nil),
		(*Payload_GetChat_)(nil),
		(*Payload_GetChatAvatar)(nil),
		(*Payload_GetContact_)(nil),
		(*Payload_GetContactList)(nil),
		(*Payload_GetMessagesAfter)(nil),
		(*Payload_PreStartupSync)(nil),
		(*Payload_ResolveIdentifier)(nil),
		(*Payload_PrepareDM)(nil),
		(*Payload_Ping)(nil),
		(*Payload_Pong)(nil),
		(*Payload_Messages)(nil),
		(*Payload_GetRecentMessages)(nil),
		(*Payload_ChatList)(nil),
		(*Payload_Attachment)(nil),
		(*Payload_SendResponse)(nil),
		(*Payload_SyncHookResponse)(nil),
		(*Payload_ResolveIdentifierResponse)(nil),
		(*Payload_Null)(nil),
		(*Payload_GUID)(nil),
		(*Payload_HistoryQuery)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ipc_v1_v1_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   58,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_ipc_v1_v1_proto_goTypes,
		DependencyIndexes: file_ipc_v1_v1_proto_depIdxs,
		EnumInfos:         file_ipc_v1_v1_proto_enumTypes,
		MessageInfos:      file_ipc_v1_v1_proto_msgTypes,
	}.Build()
	File_ipc_v1_v1_proto = out.File
	file_ipc_v1_v1_proto_rawDesc = nil
	file_ipc_v1_v1_proto_goTypes = nil
	file_ipc_v1_v1_proto_depIdxs = nil
}
